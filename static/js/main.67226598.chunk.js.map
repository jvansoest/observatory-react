{"version":3,"sources":["logosmall.svg","logo.svg","namedEntities.gif","causalFrames.gif","statementGraph.gif","addDataset.png","causalMap.gif","wordTree.gif","plotCounts.gif","statementDistribution.gif","frameDistribution.gif","termFreq.gif","exampleStep1.png","exampleStep2.png","exampleStep3.png","exampleStep4.png","navbar.js","pipelinecard.js","progressbar.js","datasetlabel.js","datasetLabelBox.js","modal.js","textbuttons.js","graphbuttons.js","numericalbuttons.js","causebuttons.js","resultsteps.js","finalbuttons.js","pipeline.js","wordtree.js","table.js","utilities.js","spinner.js","barchart.js","textbarchart.js","textgraph.js","graph.js","jsoncard.js","linechart.js","causeeffectfrequencies.js","causalmap.js","dashboard.js","home.js","about.js","tutorial.js","app.js","webpack:///./src/index.js?b635","screenshotObservatory.png"],"names":["module","exports","MyNavbar","props","Navbar","color","dark","expand","className","to","src","logoSmall","alt","Nav","navbar","NavItem","onClick","examplePipeline","NavbarText","PipelineCard","Card","CardBody","CardTitle","this","title","body","React","Component","StepProgressBar","style","marginTop","marginLeft","marginRight","percent","filledBackground","DataLabel","handleDelete","bind","onDelete","text","Badge","whiteSpace","replace","aria-hidden","fontSize","cursor","DatasetLabelBox","Col","labels","map","el","Row","key","ModalExample","state","isModalOpen","term","number","start","stop","source","comments","subreddit","toggle","handleChange","handleCheckboxChange","publish","onAdd","setState","target","name","value","checked","Button","size","disabled","block","buttonLabel","Modal","isOpen","ModalHeader","ModalBody","form","md","FormGroup","Label","for","Input","type","id","onChange","check","placeholder","ModalFooter","TextButtons","handleCause","handleEntities","handleWordTree","handleStatement","handleArticleCounts","handleWordCounts","clicked","onStatement","slot","onFetch","dataset","json","stateField","i","entities","counts","data","window","confirm","articles","onArticleCounts","onWordCount","UncontrolledPopover","trigger","placement","PopoverBody","href","rel","GraphButtons","handleDistribution","onDistribution","NumericalButtons","handlePlot","onPlot","CauseButtons","handlePlotCauses","handlePlotCausalMap","onPlotCauses","onPlotCausalMap","ResultSteps","onFinish","label","pipelineSteps","step","FinalButtons","handleFinal","onFinal","Pipeline","buttons","length","onStatementText","onStatementFrame","prettySteps","minHeight","maxHeight","trm","t1","t2","nr","c","sr","evt","Array","e","lg","xl","steps","WordTreeRow","datasets","tree","phrases","focusWord","WordTree","console","log","sm","Form","inline","minLength","debounceTimeout","loader","chartType","options","wordtree","format","word","rootProps","ExportCSVButton","CSVExport","SearchBar","Search","Table","columns","dataField","searchable","csvExport","hidden","framesets","textmarked","formatter","cell","row","height","overflow","wordBreak","rowIndex","res","forEach","utterance","split","w","triple","tripleIndex","causesMarked","fev_marked","effects_marked","causingWord","cause2","evokingWord","frameEvokingElement2","effectWord","effect2","backgroundColor","borderRadius","before","splice","fill","push","process","dangerouslySetInnerHTML","__html","keyField","search","exportCSV","searchProps","csvProps","baseProps","rowStyle","pagination","paginationFactory","BASE_URL","countArticles","grouped","reduce","curr","date","dates","Object","keys","listDate","createDateArray","_","min","max","newGrouped","articleCounts","v","k","categories","countWords","n","newNewGrouped","forOwn","listOfArticles","current_date_all_text","article","wordcnt","create","wordcountspairs","val","wordCounts","startDate","endDate","dateMove","Date","strDate","toISOString","slice","setDate","getDate","HEADERS","Accept","filterIfDefined","record","filter","includes","createTableName","count","array","prev","nxt","json2tuples","sortCounts","sort","first","second","MainSpinner","Spinner","width","HC_exporting","Highcharts","BarChart","setHoverData","hoverData","category","updateInput","inputValue","toLowerCase","itemsToPlot","countNodes","graph","prevState","chartOptions","series","chart","xAxis","rotation","fontFamily","yAxis","legend","enabled","nextProps","keyword","words","nodes","field","showField","node","mfic","onSelectChange","loading","highcharts","TextGraph","nodesToKeep","origGraph","links","link","handleSelectChange","keywordField","fetchGraph","fetch","method","headers","JSON","stringify","then","response","catch","error","showNodeDistribution","monitorHeight","nodeLabel","graphData","nodeCanvasObjectMode","nodeCanvasObject","ctx","globalScale","font","bckgDimensions","measureText","fillStyle","fillRect","x","y","textAlign","textBaseline","fillText","linkDirectionalArrowLength","linkDirectionalArrowRelPos","linkOpacity","linkWidth","weight","GraphRow","showGraphText","kind","showGraphFrame","Graph","alert","returnLabel","causeIdcs","effectIdcs","fevIdcs","join","JsonCard","CardText","LineRowCards","showEntitiesPlot","showInitialData","NormalLineChart","maxPadding","crosshair","plotOptions","area","stacking","lineColor","lineWidth","marker","LineChart","BarRowCards","showCausesPlot","updateChart","allowDecimals","commentFrames","d","lst","flat","Set","sentence","found","sim","stringSimilarity","compareTwoStrings","entries","constructor","a","b","scan","showCausalMap","updateGraph","getGraph","triples","isString","cause","effect","fev","seen_causes","seen_effects","has","idx","findIndex","group","add","nodeAutoColorBy","linkCanvasObjectMode","linkCanvasObject","Dashboard","isLoading","Home","Container","mySvg","About","Turorial","fluid","xs","position","activeClass","spy","smooth","duration","offset","stroke","ScreenshotObservatory","mask","addDatasetPicture","GifNamedentities","GifCausalframes","GifStatementGraph","GifTermFreq","GifWordTree","GifPlotCounts","GifCausalMap","GifFrameDistribution","GifStatementDistribution","Example1","Example2","Example3","Example4","App","updateState","removeAllKeysExcept","handleError","handleStatementText","handleStatementFrame","handleAdd","handleFetch","result","keysToKeep","keyToSet","optionalFunc","some","url","params","URLSearchParams","guardian","parlgbr","parlger","twitter","reddit","toString","getURL","previousState","toDelete","set","route","func","fetches","Promise","all","responses","r","jsonObjects","basename","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.67226598.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logosmall.4a6f6104.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.a5e39838.svg\";","module.exports = __webpack_public_path__ + \"static/media/namedEntities.4701f06f.gif\";","module.exports = __webpack_public_path__ + \"static/media/causalFrames.7d9c073e.gif\";","module.exports = __webpack_public_path__ + \"static/media/statementGraph.22ae812b.gif\";","module.exports = __webpack_public_path__ + \"static/media/addDataset.7afe9662.png\";","module.exports = __webpack_public_path__ + \"static/media/causalMap.f8ca984d.gif\";","module.exports = __webpack_public_path__ + \"static/media/wordTree.a083eb22.gif\";","module.exports = __webpack_public_path__ + \"static/media/plotCounts.0c4b2b74.gif\";","module.exports = __webpack_public_path__ + \"static/media/statementDistribution.2929a995.gif\";","module.exports = __webpack_public_path__ + \"static/media/frameDistribution.fb2d5456.gif\";","module.exports = __webpack_public_path__ + \"static/media/termFreq.18dd8ebf.gif\";","module.exports = __webpack_public_path__ + \"static/media/exampleStep1.d9d49943.png\";","module.exports = __webpack_public_path__ + \"static/media/exampleStep2.8abfccbe.png\";","module.exports = __webpack_public_path__ + \"static/media/exampleStep3.c361a7c0.png\";","module.exports = __webpack_public_path__ + \"static/media/exampleStep4.144cb2c9.png\";","import React from \"react\";\nimport { Navbar, Nav, NavItem, NavbarText } from \"reactstrap\";\nimport logoSmall from \"./logosmall.svg\";\nimport { Link } from \"react-router-dom\";\n\nconst MyNavbar = (props) => {\n  return (\n    <Navbar color=\"danger\" dark expand=\"md\">\n      <Link className=\"nav-link\" to=\"/\">\n        <img src={logoSmall} alt=\"Odyceus\" />\n      </Link>\n      <Nav className=\"mr-auto\" navbar>\n        <NavItem>\n          <Link className=\"nav-link\" to=\"/\">\n            Home\n          </Link>\n        </NavItem>\n        <NavItem>\n          <Link className=\"nav-link\" to=\"/observatory\">\n            Observatory\n          </Link>\n        </NavItem>\n        <NavItem>\n          <Link className=\"nav-link\" to=\"/tutorial\">\n            Manual\n          </Link>\n        </NavItem>\n        <NavItem>\n          <Link\n            className=\"nav-link\"\n            to=\"/observatory\"\n            onClick={props.examplePipeline}\n          >\n            Example\n          </Link>\n        </NavItem>\n        <NavItem>\n          <Link className=\"nav-link\" to=\"/about\">\n            About\n          </Link>\n        </NavItem>\n      </Nav>\n      <NavbarText>A Penelope interface</NavbarText>\n    </Navbar>\n  );\n};\n\nexport default MyNavbar;\n","import React from \"react\";\nimport { Card, CardBody, CardTitle } from \"reactstrap\";\n\nclass PipelineCard extends React.Component {\n  render() {\n    return (\n      <Card className=\"shadow h-100\">\n        <CardBody>\n          <CardTitle className=\"text-center\"> {this.props.title}</CardTitle>\n          {this.props.body}\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default PipelineCard;\n","import React from \"react\";\nimport { ProgressBar } from \"react-step-progress-bar\";\nimport \"react-step-progress-bar/styles.css\";\n\nclass StepProgressBar extends React.Component {\n  render() {\n    return (\n      //move it closer to the cards\n      <div\n        style={{\n          marginTop: \"100px\",\n          marginLeft: \"-28px\",\n          marginRight: \"-28px\"\n        }}\n      >\n        <ProgressBar\n          percent={!this.props.percent ? 0 : this.props.percent}\n          filledBackground=\"linear-gradient(to right, #dc3745, #d9717a)\"\n        ></ProgressBar>\n      </div>\n    );\n  }\n}\n\nexport default StepProgressBar;\n","import React from \"react\";\n\nimport { Badge } from \"reactstrap\";\n\nclass DataLabel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  handleDelete() {\n    this.props.onDelete(this.props.text);\n  }\n\n  render() {\n    return (\n      <Badge\n        color=\"danger\"\n        className=\"h1 btn-block\"\n        style={{ whiteSpace: \"normal\" }}\n      >\n        {this.props.text.replace(/_/g, \" \")}\n        <span\n          aria-hidden=\"true\"\n          onClick={this.handleDelete}\n          style={{ color: \"black\", fontSize: \"24px\", cursor: \"pointer\" }}\n        >\n          &times;\n        </span>\n      </Badge>\n    );\n  }\n}\n\nexport default DataLabel;\n","import React from \"react\";\n\nimport { Row, Col } from \"reactstrap\";\n\nimport DatasetLabel from \"./datasetlabel.js\";\n\nclass DatasetLabelBox extends React.Component {\n  render() {\n    return (\n      <Col>\n        {this.props.labels.map(el => (\n          <Row key={el}>\n            <DatasetLabel\n              onDelete={this.props.onDelete}\n              text={el}\n            ></DatasetLabel>\n          </Row>\n        ))}\n      </Col>\n    );\n  }\n}\n\nexport default DatasetLabelBox;\n","import React from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Label,\n  Col,\n  Input,\n  Row,\n  FormGroup\n} from \"reactstrap\";\n\nclass ModalExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false,\n      term: \"floods\",\n      number: \"10\",\n      start: \"2018-1-1\",\n      stop: \"2019-1-1\",\n      source: \"reddit\",\n      comments: false,\n      subreddit: \"askscience\"\n    };\n    this.toggle = this.toggle.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n    this.publish = this.publish.bind(this);\n  }\n\n  publish() {\n    this.toggle();\n    this.props.onAdd(\n      this.state.source,\n      this.state.term,\n      this.state.start,\n      this.state.stop,\n      this.state.number,\n      this.state.comments,\n      this.state.subreddit\n    );\n  }\n\n  toggle() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  handleChange({ target }) {\n    this.setState({\n      [target.name]: target.value\n    });\n  }\n\n  handleCheckboxChange({ target }) {\n    this.setState({\n      [target.name]: target.checked\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Button\n          size=\"sm\"\n          disabled={this.props.disabled}\n          className=\"mb-2\"\n          color=\"danger\"\n          onClick={this.toggle}\n          block\n        >\n          {this.props.buttonLabel}\n        </Button>\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>Add new dataset</ModalHeader>\n          <ModalBody>\n            <Row form>\n              <Col md={6}>\n                <FormGroup>\n                  <Label for=\"sourceInput\">Source</Label>\n                  <Input\n                    value={this.state.source}\n                    type=\"select\"\n                    name=\"source\"\n                    id=\"sourceInput\"\n                    onChange={this.handleChange}\n                  >\n                    <option value=\"reddit\">Reddit</option>\n                    <option value=\"guardian\">Guardian</option>\n                    {/* <option value=\"twitter\">Twitter</option> */}\n                    <option value=\"parlgbr\">Parliament UK</option>\n                    {/* <option value=\"parlger\">Parliament DE</option> */}\n                  </Input>\n                </FormGroup>\n              </Col>\n              {this.state.source === \"guardian\" && (\n                <Col md={6}>\n                  <FormGroup check>\n                    <Input\n                      type=\"checkbox\"\n                      name=\"comments\"\n                      id=\"commentsCheck\"\n                      checked={this.state.comments}\n                      onChange={this.handleCheckboxChange}\n                    />\n                    <Label for=\"commentsCheck\" check>\n                      Use comments\n                    </Label>\n                  </FormGroup>\n                </Col>\n              )}\n              {this.state.source === \"reddit\" && (\n                <Col md={6}>\n                  <FormGroup>\n                    <Label for=\"subredditInput\">Subreddit</Label>\n                    <Input\n                      value={this.state.subreddit}\n                      type=\"select\"\n                      name=\"subreddit\"\n                      id=\"subredditInput\"\n                      onChange={this.handleChange}\n                    >\n                      <option value=\"askscience\">askscience</option>\n                      <option value=\"science\">science</option>\n                      <option value=\"worldnews\">worldnews</option>\n                      <option value=\"news\">news</option>\n                      <option value=\"The_Donald\">The_Donald</option>\n                      <option value=\"politics\">politics</option>\n                      <option value=\"europe\">Europe</option>\n                      <option value=\"climatechange\">climatechange</option>\n                      <option value=\"climate\">climate</option>\n                      <option value=\"technology\">technology</option>\n                      <option value=\"Futurology\">Futurology</option>\n                    </Input>\n                  </FormGroup>\n                </Col>\n              )}\n            </Row>\n            <Row form>\n              <Col md={10}>\n                <FormGroup>\n                  <Label for=\"termInput\">Term</Label>\n                  <Input\n                    type=\"input\"\n                    name=\"term\"\n                    id=\"termInput\"\n                    onChange={this.handleChange}\n                    placeholder={this.state.term}\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n            <Row form>\n              <Col md={10}>\n                <FormGroup>\n                  <Label for=\"numberInput\">Number</Label>\n                  <Input\n                    type=\"input\"\n                    name=\"number\"\n                    id=\"numberInput\"\n                    onChange={this.handleChange}\n                    placeholder={this.state.number}\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n            <Row form>\n              <Col md={6}>\n                <FormGroup>\n                  <Label for=\"startInput\">From</Label>\n                  <Input\n                    type=\"input\"\n                    name=\"start\"\n                    id=\"startInput\"\n                    onChange={this.handleChange}\n                    placeholder={this.state.start}\n                  />\n                </FormGroup>\n              </Col>\n              <Col md={6}>\n                <FormGroup>\n                  <Label for=\"stopInput\">To</Label>\n                  <Input\n                    type=\"input\"\n                    name=\"stop\"\n                    id=\"stopInput\"\n                    onChange={this.handleChange}\n                    placeholder={this.state.stop}\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"danger\" onClick={this.publish}>\n              Add Dataset\n            </Button>{\" \"}\n            <Button color=\"secondary\" onClick={this.toggle}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ModalExample;\n","import React from \"react\";\nimport { Button, UncontrolledPopover, PopoverBody } from \"reactstrap\";\n\nclass TextButtons extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleCause = this.handleCause.bind(this);\n    this.handleEntities = this.handleEntities.bind(this);\n    this.handleWordTree = this.handleWordTree.bind(this);\n    this.handleStatement = this.handleStatement.bind(this);\n\n    this.handleArticleCounts = this.handleArticleCounts.bind(this);\n    this.handleWordCounts = this.handleWordCounts.bind(this);\n    this.state = {};\n  }\n  handleStatement() {\n    this.setState({ clicked: 1 });\n    this.props.onStatement(\n      \"graph\",\n      \"Create statement graph from extracted causes (https://penelope.vub.be/network-components/statementgraphgenerator)\",\n      this.props.slot\n    );\n  }\n  handleEntities() {\n    const func = (dataset, json, stateField, i) => {\n      dataset.entities = json[i].counts;\n      dataset.data = json[i].text;\n      return dataset;\n    };\n    this.setState({ clicked: 2 });\n    this.props.onFetch(\n      \"get-entities\",\n      \"entities\",\n      func,\n      \"numerical\",\n      \"Get Named Entities from text (https://penelope.vub.be/spacy-api/texts-named-entities)\",\n      this.props.slot\n    );\n  }\n  handleCause() {\n    if (\n      window.confirm(\n        `This operation can take a while, are you \n        sure you want to continue with a dataset of this size?`\n      )\n    ) {\n      const func = (dataset, json, stateField, i) => {\n        dataset.data = json[i].articles;\n        return dataset;\n      };\n      this.setState({ clicked: 3 });\n      this.props.onFetch(\n        \"get-cause\",\n        null,\n        func,\n        \"list\",\n        \"Get Causal Frames per article from text (https://penelope.vub.be/semantic-frame-extractor/texts-extract-frames)\",\n        this.props.slot\n      );\n    } else {\n      // Do nothing!\n    }\n  }\n  handleWordTree() {\n    const func = (dataset, json, stateField, i) => {\n      dataset[stateField] = json[i];\n      return dataset;\n    };\n    this.setState({ clicked: 4 });\n    this.props.onFetch(\n      \"get-word-tree\",\n      \"tree\",\n      func,\n      \"final\",\n      \"Get Word Tree from text (Visualisation)\",\n      this.props.slot\n    );\n  }\n  handleArticleCounts() {\n    this.setState({ clicked: 6 });\n    this.props.onArticleCounts(\n      \"numerical\",\n      \"Count the word frequencies\",\n      this.props.slot\n    );\n  }\n  handleWordCounts() {\n    this.setState({ clicked: 5 });\n    this.props.onWordCount(\n      \"numerical\",\n      \"Count the word frequencies\",\n      this.props.slot\n    );\n  }\n  render() {\n    return (\n      <div>\n        <Button\n          id=\"statementButton\"\n          //type=\"button\"\n          block\n          size=\"sm\"\n          color=\"danger\"\n          onClick={this.handleStatement}\n          text={\"Statement Graph\"}\n          disabled={this.state.clicked === 1}\n        >\n          Statement Graph\n        </Button>\n        <UncontrolledPopover\n          trigger=\"hover\"\n          placement=\"right\"\n          target=\"statementButton\"\n        >\n          <PopoverBody>\n            Create a statement network graph from all the sentences in the\n            dataset. Two nodes(=sentences) are connected if they share a word\n            lemma.{\" \"}\n            <a href=\"/tutorial\" target=\"_blank\" rel=\"noopener noreferrer\">\n              More information\n            </a>\n          </PopoverBody>\n        </UncontrolledPopover>\n        <Button\n          id=\"entitiesButton\"\n          block\n          size=\"sm\"\n          color=\"danger\"\n          onClick={this.handleEntities}\n          disabled={this.state.clicked === 2}\n        >\n          Count Named Entities\n        </Button>\n        <UncontrolledPopover\n          trigger=\"hover\"\n          placement=\"right\"\n          target=\"entitiesButton\"\n        >\n          <PopoverBody>\n            Extract the Named Entities (geographic locations, persons,\n            organisations, ...) from a text with machine learning methods.{\" \"}\n            <a href=\"/tutorial\" target=\"_blank\" rel=\"noopener noreferrer\">\n              More information\n            </a>\n          </PopoverBody>\n        </UncontrolledPopover>\n        <Button\n          id=\"causeButton\"\n          block\n          size=\"sm\"\n          color=\"danger\"\n          onClick={this.handleCause}\n          disabled={this.state.clicked === 3}\n        >\n          Causal Frames\n        </Button>\n        <UncontrolledPopover\n          trigger=\"hover\"\n          placement=\"right\"\n          target=\"causeButton\"\n        >\n          <PopoverBody>\n            Extract the cause-and-effect relations from text{\" \"}\n            <a href=\"/tutorial\" target=\"_blank\" rel=\"noopener noreferrer\">\n              More information\n            </a>\n          </PopoverBody>\n        </UncontrolledPopover>\n        <Button\n          id=\"treeButton\"\n          block\n          size=\"sm\"\n          color=\"danger\"\n          onClick={this.handleWordTree}\n          disabled={this.state.clicked === 4}\n        >\n          Word tree\n        </Button>\n        <UncontrolledPopover\n          trigger=\"hover\"\n          placement=\"right\"\n          target=\"treeButton\"\n        >\n          <PopoverBody>\n            Create a word tree from the text{\" \"}\n            <a href=\"/tutorial\" target=\"_blank\" rel=\"noopener noreferrer\">\n              More information\n            </a>\n          </PopoverBody>\n        </UncontrolledPopover>\n        <Button\n          id=\"wordCountButton\"\n          block\n          size=\"sm\"\n          color=\"danger\"\n          disabled={this.state.clicked === 5}\n          onClick={this.handleWordCounts}\n        >\n          Term frequency\n        </Button>\n        <UncontrolledPopover\n          trigger=\"hover\"\n          placement=\"right\"\n          target=\"wordCountButton\"\n        >\n          <PopoverBody>\n            Show term frequency over time{\" \"}\n            <a href=\"/tutorial\" target=\"_blank\" rel=\"noopener noreferrer\">\n              More information\n            </a>\n          </PopoverBody>\n        </UncontrolledPopover>\n        <Button\n          id=\"articleCountButton\"\n          block\n          size=\"sm\"\n          color=\"danger\"\n          disabled={this.state.clicked === 6}\n          onClick={this.handleArticleCounts}\n        >\n          Article Counts\n        </Button>\n        <UncontrolledPopover\n          trigger=\"hover\"\n          placement=\"right\"\n          target=\"articleCountButton\"\n        >\n          <PopoverBody>\n            Show the article counts{\" \"}\n            <a href=\"/tutorial\" target=\"_blank\" rel=\"noopener noreferrer\">\n              More information\n            </a>\n          </PopoverBody>\n        </UncontrolledPopover>\n      </div>\n    );\n  }\n}\n\nexport default TextButtons;\n","import React from \"react\";\nimport { Button } from \"reactstrap\";\n\nclass GraphButtons extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDistribution = this.handleDistribution.bind(this);\n    this.state = {};\n  }\n\n  handleDistribution() {\n    this.setState({ clicked: 1 });\n    this.props.onDistribution(\n      \"final\",\n      \"Create Barchart showing edge distribution from graph (Visualisation)\",\n      this.props.slot\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <Button\n          block\n          size=\"sm\"\n          color=\"danger\"\n          onClick={this.handleDistribution}\n          disabled={this.state.clicked === 1}\n        >\n          Plot distribution\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default GraphButtons;\n","import React from \"react\";\nimport { Button, PopoverBody, UncontrolledPopover } from \"reactstrap\";\n\nclass NumericalButtons extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handlePlot = this.handlePlot.bind(this);\n    this.state = {};\n  }\n  handlePlot() {\n    this.setState({ clicked: true });\n    this.props.onPlot(\n      \"final\",\n      \"Create line plot from Entities JSON (Visualisation)\",\n      this.props.slot\n    );\n  }\n  render() {\n    return (\n      <div>\n        <Button\n          id=\"plotButton\"\n          block\n          size=\"sm\"\n          color=\"danger\"\n          onClick={this.handlePlot}\n        >\n          Plot counts\n        </Button>\n        <UncontrolledPopover\n          trigger=\"hover\"\n          placement=\"right\"\n          target=\"plotButton\"\n        >\n          <PopoverBody>\n            Plot the counts.{\" \"}\n            <a href=\"/tutorial\" target=\"_blank\" rel=\"noopener noreferrer\">\n              More information\n            </a>\n          </PopoverBody>\n        </UncontrolledPopover>\n      </div>\n    );\n  }\n}\n\nexport default NumericalButtons;\n","import React from \"react\";\nimport { Button, UncontrolledPopover, PopoverBody } from \"reactstrap\";\n\nclass CauseButtons extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleStatement = this.handleStatement.bind(this);\n    this.handlePlotCauses = this.handlePlotCauses.bind(this);\n    this.handlePlotCausalMap = this.handlePlotCausalMap.bind(this);\n    this.state = {};\n  }\n  handleStatement() {\n    this.setState({ clicked: 1 });\n    this.props.onStatement(\n      \"graph\",\n      \"Create statement graph from extracted causes (https://penelope.vub.be/network-components/statementgraphgenerator)\",\n      this.props.slot\n    );\n  }\n  handlePlotCauses() {\n    this.setState({ clicked: 2 });\n    this.props.onPlotCauses(\n      \"final\",\n      \"Plot causes per utterance from causes (Visualisation)\",\n      this.props.slot\n    );\n  }\n  handlePlotCausalMap() {\n    this.setState({ clicked: 3 });\n    this.props.onPlotCausalMap(\n      \"final\",\n      \"Create causal map from extracted causes and effects (Visualisation)\",\n      this.props.slot\n    );\n  }\n  render() {\n    return (\n      <div>\n        <Button\n          id=\"statementButton\"\n          block\n          size=\"sm\"\n          color=\"danger\"\n          onClick={this.handleStatement}\n          disabled={this.state.clicked === 1}\n        >\n          Statement graph\n        </Button>\n        <UncontrolledPopover\n          trigger=\"hover\"\n          placement=\"right\"\n          target=\"statementButton\"\n        >\n          <PopoverBody>\n            Create a statement network graph from either the causes or the\n            effects in the dataset. Two nodes ( = a node is an extracted cause\n            of effect) are connected if they share a word lemma.{\" \"}\n            <a href=\"/tutorial\" target=\"_blank\" rel=\"noopener noreferrer\">\n              More information\n            </a>\n          </PopoverBody>\n        </UncontrolledPopover>\n        <Button\n          id=\"frameDistrButton\"\n          block\n          size=\"sm\"\n          color=\"danger\"\n          onClick={this.handlePlotCauses}\n          disabled={this.state.clicked === 2}\n        >\n          Plot Frame Distribution\n        </Button>\n        <UncontrolledPopover\n          trigger=\"hover\"\n          placement=\"right\"\n          target=\"frameDistrButton\"\n        >\n          <PopoverBody>\n            Plot a barchart showing the frequency distribution of similar causes\n            or similar effects.{\" \"}\n            <a href=\"/tutorial\" target=\"_blank\" rel=\"noopener noreferrer\">\n              More information\n            </a>\n          </PopoverBody>\n        </UncontrolledPopover>\n        <Button\n          id=\"causalMapButton\"\n          block\n          size=\"sm\"\n          color=\"danger\"\n          onClick={this.handlePlotCausalMap}\n          disabled={this.state.clicked === 3}\n        >\n          Plot Causal Map\n        </Button>\n        <UncontrolledPopover\n          trigger=\"hover\"\n          placement=\"right\"\n          target=\"causalMapButton\"\n        >\n          <PopoverBody>\n            Plot a network graph connecting the causes and effects together.{\" \"}\n            <a href=\"/tutorial\" target=\"_blank\" rel=\"noopener noreferrer\">\n              More information\n            </a>\n          </PopoverBody>\n        </UncontrolledPopover>\n      </div>\n    );\n  }\n}\n\nexport default CauseButtons;\n","import React from \"react\";\nimport {\n  PopoverBody,\n  UncontrolledPopover,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nclass ResultSteps extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  publish() {\n    this.toggle();\n  }\n\n  toggle() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  handleChange({ target }) {\n    this.setState({\n      [target.name]: target.value\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Button\n          id=\"finalButton\"\n          size=\"sm\"\n          disabled={this.props.disabled}\n          className=\"mb-2\"\n          color=\"danger\"\n          onClick={() => {\n            this.toggle();\n            this.props.onFinish();\n          }}\n          block\n        >\n          Check pipeline steps\n        </Button>\n        <UncontrolledPopover\n          trigger=\"hover\"\n          placement=\"right\"\n          target=\"finalButton\"\n        >\n          <PopoverBody>Show the different pipeline steps</PopoverBody>\n        </UncontrolledPopover>\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>\n            Pipeline steps overview\n          </ModalHeader>\n          <ModalBody>\n            <ol>\n              {this.props.labels.map((label, i) => (\n                <li key={label}>\n                  Dataset {i}: {label}\n                </li>\n              ))}\n              {this.props.pipelineSteps.map(step => (\n                <li key={step}>{step}</li>\n              ))}\n            </ol>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"danger\" onClick={this.toggle}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\nexport default ResultSteps;\n","import React from \"react\";\nimport ResultSteps from \"./resultsteps.js\";\n\nclass FinalButtons extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleFinal = this.handleFinal.bind(this);\n    this.state = {};\n  }\n\n  handleFinal() {\n    this.props.onFinal(\"done\", \"Results\", this.props.slot);\n  }\n\n  render() {\n    return (\n      <div>\n        <ResultSteps\n          onFinish={this.handleFinal}\n          labels={this.props.labels}\n          pipelineSteps={this.props.pipelineSteps}\n        />\n      </div>\n    );\n  }\n}\n\nexport default FinalButtons;\n","import React, { Fragment } from \"react\";\nimport { Col, Row, Card, CardBody, CardTitle } from \"reactstrap\";\nimport PipelineCard from \"./pipelinecard.js\";\nimport StepProgressBar from \"./progressbar.js\";\nimport DatasetLabelBox from \"./datasetLabelBox.js\";\nimport Modal from \"./modal.js\";\nimport TextButtons from \"./textbuttons.js\";\nimport GraphButtons from \"./graphbuttons.js\";\nimport NumericalButtons from \"./numericalbuttons.js\";\nimport CauseButtons from \"./causebuttons.js\";\nimport FinalButtons from \"./finalbuttons.js\";\n\nclass Pipeline extends React.Component {\n  render() {\n    const buttons = (name, slot) => {\n      if (this.props.labels.length < 1) return;\n      if (name === \"text\")\n        return (\n          <TextButtons\n            slot={slot}\n            onFetch={this.props.onFetch}\n            onStatement={this.props.onStatementText}\n            onArticleCounts={this.props.onArticleCounts}\n            onWordCount={this.props.onWordCount}\n          />\n        );\n      if (name === \"graph\")\n        return (\n          <GraphButtons\n            slot={slot}\n            onDistribution={this.props.onDistribution}\n          />\n        );\n      if (name === \"numerical\")\n        return <NumericalButtons slot={slot} onPlot={this.props.onPlot} />;\n\n      if (name === \"list\")\n        return (\n          <CauseButtons\n            slot={slot}\n            onFetch={this.props.onFetch}\n            onStatement={this.props.onStatementFrame}\n            onPlotCauses={this.props.onPlotCauses}\n            onPlotCausalMap={this.props.onPlotCausalMap}\n          />\n        );\n      if (name === \"final\")\n        return (\n          <FinalButtons\n            slot={slot}\n            labels={this.props.labels}\n            pipelineSteps={this.props.prettySteps}\n            onFinal={this.props.onFinal}\n          />\n        );\n    };\n\n    return (\n      <Row>\n        <Col>\n          <Card\n            className=\"shadow\"\n            style={{ minHeight: \"240px\", maxHeight: \"320px\" }}\n          >\n            <CardBody>\n              <CardTitle> Choose dataset(s)</CardTitle>\n              <Modal\n                disabled={this.props.labels.length >= 2}\n                buttonLabel=\"Add Dataset\"\n                onAdd={(src, trm, t1, t2, nr, c, sr) => {\n                  this.props.onAdd(src, trm, t1, t2, nr, c, sr);\n                }}\n              />\n              <DatasetLabelBox\n                onDelete={(evt) => {\n                  this.props.onDelete(evt);\n                }}\n                labels={this.props.labels}\n              ></DatasetLabelBox>\n            </CardBody>\n          </Card>\n        </Col>\n\n        {[...Array(4)].map((e, i) => (\n          <Fragment key={i}>\n            <Col lg=\"1\" xl=\"1\" className=\"d-none d-lg-block\">\n              <StepProgressBar\n                percent={this.props.steps.length >= i + 1 && 100}\n              ></StepProgressBar>\n            </Col>\n            <Col>\n              <PipelineCard\n                title={\"Step \" + (i + 1)}\n                body={buttons(\n                  i === 0 ? \"text\" : this.props.steps[i - 1],\n                  i + 1\n                )}\n              ></PipelineCard>\n            </Col>\n          </Fragment>\n        ))}\n\n        {/* <Col lg=\"1\" xl=\"1\" className=\"d-none d-lg-block\">\n          <StepProgressBar\n            percent={this.props.steps.length >= 1 && 100}\n          ></StepProgressBar>\n        </Col>\n        <Col>\n          <PipelineCard\n            title={\"Step 1\"}\n            body={buttons(\"text\", 1)}\n          ></PipelineCard>\n        </Col>\n\n        <Col lg=\"1\" xl=\"1\" className=\"d-none d-lg-block\">\n          <StepProgressBar\n            percent={this.props.steps.length >= 2 && 100}\n          ></StepProgressBar>\n        </Col>\n        <Col>\n          <PipelineCard\n            title={\"Step 2\"}\n            body={buttons(this.props.steps[0], 2)}\n          ></PipelineCard>\n        </Col>\n\n        <Col lg=\"1\" xl=\"1\" className=\"d-none d-lg-block\">\n          <StepProgressBar\n            percent={this.props.steps.length >= 3 && 100}\n          ></StepProgressBar>\n        </Col>\n        <Col>\n          <PipelineCard\n            title={\"Step 3\"}\n            body={buttons(this.props.steps[1], 3)}\n          ></PipelineCard>\n        </Col>\n\n        <Col lg=\"1\" xl=\"1\" className=\"d-none d-lg-block\">\n          <StepProgressBar\n            percent={this.props.steps.length >= 4 && 100}\n          ></StepProgressBar>\n        </Col>\n        <Col>\n          <PipelineCard\n            title={\"Step 4\"}\n            body={buttons(this.props.steps[2], 4)}\n          ></PipelineCard>\n        </Col> */}\n      </Row>\n    );\n  }\n}\n\nexport default Pipeline;\n","import React from \"react\";\nimport Chart from \"react-google-charts\";\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  Col,\n  Row,\n  Input,\n  Form,\n  Label,\n} from \"reactstrap\";\nimport { DebounceInput } from \"react-debounce-input\";\n\nclass WordTreeRow extends React.Component {\n  render() {\n    if (!this.props.datasets) return null;\n    return (\n      <Row>\n        {this.props.datasets.map(\n          (dataset) =>\n            dataset.tree && (\n              <WordTree\n                title={this.props.title}\n                key={dataset.name}\n                phrases={dataset.tree}\n                focusWord={dataset.term}\n              />\n            )\n        )}\n      </Row>\n    );\n  }\n}\n\nclass WordTree extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      type: \"double\",\n      data: null,\n      focusWord: null,\n    };\n  }\n  componentDidMount() {\n    this.setState({\n      data: this.props.phrases,\n      focusWord: this.props.focusWord,\n    });\n  }\n\n  handleChange({ target }) {\n    console.log(target.name, target.value);\n    this.setState({\n      [target.name]: target.value,\n    });\n  }\n\n  render() {\n    return (\n      <Col sm=\"6\">\n        <Card className=\"shadow justify-content-between\">\n          <CardBody>\n            <CardTitle className=\"text-center\">\n              <h3>Word Tree</h3>\n            </CardTitle>\n            <Form inline>\n              <Label for=\"wordInput\" className=\"mr-2\">\n                Search:\n              </Label>\n              <DebounceInput\n                id=\"wordInput\"\n                name=\"focusWord\"\n                className=\"form-control mr-2\"\n                value={this.state.focusWord}\n                minLength={2}\n                debounceTimeout={900}\n                onChange={(evt) => this.handleChange(evt)}\n              />\n              <Input\n                value={this.state.type}\n                type=\"select\"\n                name=\"type\"\n                id=\"typeInput\"\n                onChange={this.handleChange}\n              >\n                <option value=\"suffix\">Word before</option>\n                <option value=\"prefix\">Word after</option>\n                <option value=\"double\">Word middle</option>\n              </Input>\n            </Form>\n            <Chart\n              loader={<div>Loading Chart</div>}\n              chartType=\"WordTree\"\n              data={this.props.phrases}\n              options={{\n                wordtree: {\n                  format: \"implicit\",\n                  word: this.state.focusWord,\n                  type: this.state.type,\n                },\n              }}\n              rootProps={{ \"data-testid\": \"1\" }}\n            />\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default WordTreeRow;\n","import React from \"react\";\nimport { Card, CardBody, CardTitle, Row, Col } from \"reactstrap\";\n\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, {\n  Search,\n  CSVExport\n} from \"react-bootstrap-table2-toolkit\";\n\nconst { ExportCSVButton } = CSVExport;\nconst { SearchBar } = Search;\n\n//this.props.dataset must be a list of json objects\n// [{},{},{},{}]\n\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n\n  render() {\n    function process(cell) {\n      let res = [];\n\n      cell.forEach(c => {\n        if (!c.entities) {\n          res.push(c.utterance);\n        } else {\n          let utterance = c.utterance.split(\" \");\n          utterance = utterance.map(w => w + \" \");\n          c.entities.forEach((triple, tripleIndex) => {\n            let causingWord = triple.cause2;\n            let evokingWord = triple.frameEvokingElement2;\n            let effectWord = triple.effect2;\n\n            let causesMarked;\n            let fev_marked;\n            let effects_marked;\n\n            if (causingWord) {\n              causesMarked = causingWord.map(i => utterance[i - 1]);\n              causesMarked = (\n                <mark\n                  key={tripleIndex + \"cause\"}\n                  style={{ backgroundColor: \"#9cc9cc\", borderRadius: \"0.25em\" }}\n                >\n                  {causesMarked.map(w => w + \" \")}\n                  <span\n                    style={{\n                      fontSize: \"6px\",\n                      backgroundColor: \"white\",\n                      borderRadius: \"0.25em\"\n                    }}\n                  >\n                    CAUSE\n                  </span>\n                </mark>\n              );\n            }\n\n            if (evokingWord) {\n              fev_marked = evokingWord.map(i => utterance[i - 1]);\n              fev_marked = (\n                <mark\n                  key={tripleIndex + \"evoke\"}\n                  style={{ backgroundColor: \"#7aecec\", borderRadius: \"0.25em\" }}\n                >\n                  {fev_marked.map(w => w + \" \")}\n                  <span\n                    style={{\n                      fontSize: \"6px\",\n                      backgroundColor: \"white\",\n                      borderRadius: \"0.25em\"\n                    }}\n                  >\n                    FEV\n                  </span>\n                </mark>\n              );\n            }\n            if (effectWord) {\n              effects_marked = effectWord.map(i => utterance[i - 1]);\n              effects_marked = (\n                <mark\n                  key={tripleIndex + \"effect\"}\n                  style={{ backgroundColor: \"#ff8197\", borderRadius: \"0.25em\" }}\n                >\n                  {effects_marked.map(w => w + \" \")}\n                  <span\n                    style={{\n                      fontSize: \"6px\",\n                      backgroundColor: \"white\",\n                      borderRadius: \"0.25em\"\n                    }}\n                  >\n                    EFFECT\n                  </span>\n                </mark>\n              );\n            }\n\n            if (causesMarked) {\n              let before = utterance.length;\n              utterance.splice(\n                causingWord[0] - 1,\n                causingWord.length,\n                ...[causesMarked]\n              );\n              if (before - utterance.length > 0) {\n                utterance.splice(\n                  causingWord[0],\n                  0,\n                  ...Array(causingWord.length - 1).fill(\" \")\n                );\n              }\n            }\n            if (fev_marked) {\n              let before = utterance.length;\n              utterance.splice(\n                evokingWord[0] - 1,\n                evokingWord.length,\n                ...[fev_marked]\n              );\n              if (before - utterance.length > 0) {\n                utterance.splice(\n                  evokingWord[0],\n                  0,\n                  ...Array(evokingWord.length - 1).fill(\" \")\n                );\n              }\n            }\n            if (effectWord) {\n              let before = utterance.length;\n              utterance.splice(\n                effectWord[0] - 1,\n                effectWord.length,\n                ...[effects_marked]\n              );\n              if (before - utterance.length > 0) {\n                utterance.splice(\n                  effectWord[0],\n                  0,\n                  ...Array(effectWord.length - 1).fill(\" \")\n                );\n              }\n            }\n          });\n\n          res.push(utterance);\n        }\n      });\n      return res;\n    }\n    const columns = [\n      {\n        dataField: \"date\",\n        text: \"Article date\",\n        CSVExport: true,\n        searchable: true\n      },\n      {\n        dataField: \"title\",\n        text: \"Title\",\n        csvExport: true,\n        searchable: true\n      },\n      {\n        dataField: \"text\",\n        text: \"Text original\",\n        searchable: true,\n        csvExport: true,\n        hidden:\n          this.props.dataset.data[0].framesets ||\n          this.props.dataset.data[0].textmarked,\n        formatter: (cell, row) => {\n          return (\n            <div\n              style={{\n                fontSize: 10,\n                height: \"150px\",\n                overflow: \"auto\",\n                wordBreak: \"break-all\"\n              }}\n            >\n              {cell}\n            </div>\n          );\n        }\n      },\n      {\n        dataField: \"framesets\",\n        text: \"Causal relations\",\n        searchable: false,\n        csvExport: false,\n        hidden: !this.props.dataset.data[0].framesets && true,\n        formatter: (cell, row, rowIndex) => {\n          return (\n            <div\n              style={{\n                fontSize: 9,\n                height: \"150px\",\n                // width: \"100px\",\n                overflow: \"auto\"\n              }}\n            >\n              {process(cell)\n              // JSON.stringify(cell)\n              }\n            </div>\n          );\n        }\n      },\n      {\n        dataField: \"textmarked\",\n        text: \"Text marked\",\n        searchable: false,\n        csvExport: false,\n        hidden: !this.props.dataset.data[0].textmarked && true,\n        formatter: (cell, row) => {\n          return (\n            <div\n              style={{\n                fontSize: 10,\n                height: \"150px\",\n                overflow: \"auto\",\n                wordBreak: \"break-all\"\n              }}\n            >\n              <div dangerouslySetInnerHTML={{ __html: cell }} />\n            </div>\n          );\n        }\n      }\n      // {\n      //   dataField: \"framesets\",\n      //   text: \"Causal relations\",\n      //   searchable: false,\n      //   csvExport: false,\n      //   hidden: !this.props.dataset.data[0].framesets && true,\n      //   formatter: (cell, row) => {\n      //     return (\n      //       <div\n      //         style={{\n      //           fontSize: 9,\n      //           height: \"150px\",\n      //           width: \"100px\",\n      //           overflow: \"auto\"\n      //         }}\n      //       >\n      //         {JSON.stringify(cell)}\n      //       </div>\n      //     );\n      //   }\n      // }\n    ];\n    return (\n      <div>\n        <Card className=\"justify-content-between shadow w-100\">\n          <CardBody>\n            <CardTitle className=\"text-center\">\n              <h3>{\"Dataset\"}</h3> {this.props.dataset.name.replace(/_/g, \" \")}\n            </CardTitle>\n            <ToolkitProvider\n              keyField=\"id\"\n              data={this.props.dataset.data}\n              columns={columns}\n              search\n              exportCSV\n            >\n              {props => (\n                <div>\n                  <Row>\n                    <Col>\n                      <SearchBar {...props.searchProps} className=\"\" />\n                    </Col>\n                    <Col className=\"text-right\">\n                      <ExportCSVButton\n                        className=\"btn-danger\"\n                        {...props.csvProps}\n                      >\n                        Export CSV\n                      </ExportCSVButton>\n                    </Col>\n                  </Row>\n                  <BootstrapTable\n                    {...props.baseProps}\n                    rowStyle={{ fontSize: 8 }}\n                    pagination={paginationFactory()}\n                  />\n                </div>\n              )}\n            </ToolkitProvider>\n          </CardBody>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default Table;\n","import _ from \"lodash\";\n\n// export const BASE_URL = \"https://penelope.vub.be/observatory-api/\";\nexport const BASE_URL = \"http://localhost:5000/\";\n//export const BASE_URL = \"http://81.164.99.54:5000/\";\n// // Example graph\n// let a = {\n//   nodes: [\n//     { id: \"node1\", group: 1 },\n//     { id: \"node2\", group: 2 },\n//     { id: \"node3\", group: 2 },\n//     { id: \"node4\", group: 3 }\n//   ],\n//   links: [\n//     { source: \"node1\", target: \"node2\", weight: 1 },\n//     { source: \"node1\", target: \"node3\", weight: 3 }\n//   ]\n// };\n\nexport function countArticles(dataset) {\n  let grouped = dataset.data.reduce((res, curr) => {\n    res[curr.date] = res[curr.date] || [];\n    res[curr.date].push(curr);\n    return res;\n  }, {});\n\n  let dates = Object.keys(grouped);\n  let listDate = createDateArray(_.min(dates), _.max(dates));\n  let newGrouped = {};\n  listDate.forEach((date) => {\n    newGrouped[date] = grouped[date] || [];\n  });\n\n  //word counts here\n  let articleCounts = _.map(newGrouped, (v, k) => v.length);\n\n  dataset.articleCounts = {\n    data: [{ name: \"Article Counts\", data: articleCounts }],\n    categories: listDate,\n  };\n\n  return dataset;\n}\n\nexport function countWords(dataset) {\n  let grouped = dataset.data.reduce((res, curr) => {\n    res[curr.date] = res[curr.date] || [];\n    res[curr.date].push(curr);\n    return res;\n  }, {});\n\n  let dates = Object.keys(grouped);\n  let listDate = createDateArray(_.min(dates), _.max(dates));\n  let newGrouped = {};\n\n  console.log(listDate);\n  listDate.forEach((date) => {\n    newGrouped[date] = grouped[date] || [];\n  });\n\n  //word counts here\n\n  let n = listDate.length;\n  console.log(n);\n  let newNewGrouped = {};\n\n  let i = 0;\n  _.forOwn(newGrouped, (listOfArticles, date) => {\n    let current_date_all_text = \"\";\n    listOfArticles.forEach((article) => {\n      current_date_all_text = current_date_all_text + \" \" + article.text;\n    });\n    newGrouped[date] = current_date_all_text;\n\n    //var words = \"Hi there and hello there. Welcome and hello there.\";\n\n    var wordcnt = current_date_all_text\n      .replace(/[^\\w\\s]/g, \"\")\n      .split(/\\s+/)\n      .reduce(function (map, word) {\n        map[word] = (map[word] || 0) + 1;\n        return map;\n      }, Object.create(null));\n\n    console.log(wordcnt);\n    _.forOwn(wordcnt, (number, word) => {\n      if (word in newNewGrouped) {\n        console.log(\"exists\", word);\n        newNewGrouped[word].splice(i, 1, number);\n      } else {\n        console.log(\"not exists\", word);\n        newNewGrouped[word] = new Array(n - 1).fill(0);\n        newNewGrouped[word].splice(i, 0, number);\n      }\n    });\n    i = i + 1;\n    console.log(newNewGrouped);\n  });\n\n  //let articleCounts = _.map(newGrouped, (v, k) => v.length);\n\n  let wordcountspairs = [];\n  _.forOwn(newNewGrouped, (val, key) => {\n    wordcountspairs.push({ name: key, data: val });\n  });\n\n  dataset.wordCounts = {\n    data: wordcountspairs,\n    categories: listDate,\n  };\n\n  return dataset;\n}\n\nexport function createDateArray(startDate, endDate) {\n  if (startDate === endDate) return [startDate];\n  let listDate = [];\n  let dateMove = new Date(startDate);\n  let strDate = startDate;\n  while (strDate < endDate) {\n    strDate = dateMove.toISOString().slice(0, 10);\n    listDate.push(strDate);\n    dateMove.setDate(dateMove.getDate() + 1);\n  }\n  return listDate;\n}\n\nexport function render_displacy(text, spans, ents, colorMap) {\n  let result = `<p style=\"font-size:9px;\">`;\n  let offset = 0;\n  spans.forEach(({ type, start, end }) => {\n    const entity = text.slice(start, end);\n    const fragments = text.slice(offset, start).split(\"\\n\");\n    fragments.forEach((fragment, i) => {\n      if (fragments.length > 1 && i !== fragments.length - 1) {\n        result = result + fragment + \"<br />\";\n      } else {\n        result = result + fragment;\n      }\n    });\n    offset = end;\n    if (ents.includes(type.toLowerCase())) {\n      result =\n        result +\n        `<mark style=\"background-color: ${colorMap[type.toLowerCase()]};\n            border-radius: 0.25em; opacity: 0.66; padding: -1px;\"> ${entity} ${type} </mark>`;\n    } else {\n      result = result + entity;\n    }\n  });\n\n  result = result + text.slice(offset, text.length) + `</p>`;\n  return result;\n}\n\nexport const HEADERS = {\n  Accept: \"application/json\",\n  \"Content-Type\": \"application/json\",\n};\n\nexport function convertLowerCaser(triple) {\n  if (\"cause\" in triple && _.isString(triple.cause))\n    triple.cause = triple.cause.toLowerCase();\n  if (\"effect\" in triple && _.isString(triple.effect))\n    triple.effect = triple.effect.toLowerCase();\n  if (\"fev\" in triple && _.isString(triple.fev))\n    triple.fev = triple.fev.toLowerCase();\n  return triple;\n}\n\nexport function filterIfDefined(record, filter, e) {\n  if (filter) {\n    if (record in e && e[record].includes(filter)) {\n      return true;\n    } else {\n      return false;\n    }\n  } else {\n    return true;\n  }\n}\n\nexport function createTableName(\n  source,\n  comments,\n  subreddit,\n  term,\n  start,\n  stop,\n  number\n) {\n  return (\n    source +\n    \"_\" +\n    (comments ? \"comments_\" : \"\") +\n    (source === \"reddit\" ? subreddit + \"_\" : \"\") +\n    term +\n    \"_\" +\n    start +\n    \"_\" +\n    stop +\n    \"_\" +\n    number\n  );\n}\n\nexport function count(array) {\n  return array.reduce((prev, nxt) => {\n    prev[nxt] = prev[nxt] + 1 || 1;\n    return prev;\n  }, {});\n}\n\nexport function json2tuples(json) {\n  return Object.keys(json).map((key, i) => {\n    return [key, json[key]];\n  });\n}\n\nexport function sortCounts(counts) {\n  return counts.sort(function (first, second) {\n    return second[1] - first[1];\n  });\n}\n\nexport default function getURL(\n  source,\n  term,\n  start,\n  stop,\n  number,\n  comments,\n  subreddit\n) {\n  const path = {\n    guardian: \"test?\",\n    parlgbr: \"get-parl-data-gbr?\",\n    parlger: \"get-parl-data-ger?\",\n    twitter: \"twitter-data?\",\n    reddit: \"get-reddit-data?\",\n  };\n  let params = new URLSearchParams({\n    term: term,\n    start: start,\n    stop: stop,\n    number: number,\n    comments: comments,\n    subreddit: subreddit,\n  });\n  return BASE_URL + path[source] + params.toString();\n}\n\nexport const SAMPLE_CAUSE_DATA = {\n  frameSets: [\n    [\n      {\n        entities: [\n          {\n            frameEvokingElement: \"causes\",\n            frameVar: \"?frame144988\",\n            id: \"causationFrame703\",\n            utterance: \"this causes that .\",\n          },\n        ],\n        id: \"frameSet7914\",\n        utterance: \"this causes that .\",\n      },\n      {\n        entities: \"None\",\n        id: \"frameSet7915\",\n        utterance: \"This is one article .\",\n      },\n      {\n        entities: [\n          {\n            cause: \"it is very long\",\n            effect: \"the article is very long\",\n            frameEvokingElement: \"because\",\n            frameVar: \"?frame145028\",\n            id: \"causationFrame704\",\n            utterance: \"because\",\n          },\n          {\n            cause: \"it is very long\",\n            effect: \"the article is very long\",\n            frameEvokingElement: \"because\",\n            frameVar: \"?frame145028\",\n            id: \"causationFrame704\",\n            utterance: \"because\",\n          },\n        ],\n        id: \"frameSet7916\",\n        utterance: \"The article is very long because it is very long\",\n      },\n    ],\n    [\n      {\n        entities: \"None\",\n        id: \"frameSet7917\",\n        utterance: \"this is the second article .\",\n      },\n      {\n        entities: [\n          {\n            cause: \"co2\",\n            effect: \"floods\",\n            frameEvokingElement: \"caused\",\n            frameVar: \"?frame145070\",\n            id: \"causationFrame705\",\n            utterance: \"caused by co2\",\n          },\n        ],\n        id: \"frameSet7918\",\n        utterance: \"floods caused by co2\",\n      },\n    ],\n  ],\n};\n\nexport function appendDataset(term, start, stop, number, data, prevState) {\n  let datasetName = term + start + stop + number;\n  let dataset = { ...prevState.dataset };\n  let step = prevState.step;\n\n  if (!prevState.step.length) step = [...prevState.step, \"text\"];\n\n  dataset[datasetName] = {\n    term: term,\n    start: start,\n    stop: stop,\n    number: number,\n    data: data,\n  };\n  return { dataset, step: step };\n}\n","import React from \"react\";\nimport { Spinner } from \"reactstrap\";\n\nclass MainSpinner extends React.Component {\n  render() {\n    return (\n      <div className=\"text-center m-10\">\n        <Spinner style={{ width: \"6rem\", height: \"6rem\" }} color=\"danger\" />\n      </div>\n    );\n  }\n}\n\nexport default MainSpinner;\n","import React from \"react\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport Highcharts from \"highcharts\";\nimport HC_exporting from \"highcharts/modules/exporting\";\nimport MainSpinner from \"./spinner.js\";\n\nimport {\n  sortCounts,\n  count,\n  json2tuples,\n  filterIfDefined\n} from \"./utilities.js\";\nimport { Card, CardBody, Form, FormGroup, Label, Input } from \"reactstrap\";\nimport { DebounceInput } from \"react-debounce-input\";\n\nHC_exporting(Highcharts);\n\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.countNodes = this.countNodes.bind(this);\n    this.state = {\n      inputValue: \"\",\n      chartOptions: {\n        chart: {\n          type: \"column\"\n        },\n        title: {\n          text: \"Show effects for cause: all\"\n        },\n        xAxis: {\n          type: \"category\",\n          labels: {\n            rotation: -55,\n            style: {\n              fontSize: \"9px\",\n              fontFamily: \"Verdana, sans-serif\"\n            }\n          }\n        },\n        yAxis: {\n          min: 0,\n          title: {\n            text: \"Number of occurences\"\n          }\n        },\n        legend: {\n          enabled: false\n        },\n        series: [\n          {\n            name: \"Frequency\",\n            data: this.countNodes(this.props.graph, \"\")\n          }\n        ]\n      }\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      inputValue: \"\",\n      chartOptions: {\n        chart: {\n          type: \"column\"\n        },\n        title: {\n          text: \"Show effects for cause: all\"\n        },\n        xAxis: {\n          type: \"category\",\n          labels: {\n            rotation: -55,\n            style: {\n              fontSize: \"9px\",\n              fontFamily: \"Verdana, sans-serif\"\n            }\n          }\n        },\n        yAxis: {\n          min: 0,\n          title: {\n            text: \"Number of occurences\"\n          }\n        },\n        legend: {\n          enabled: false\n        },\n        series: [\n          {\n            name: \"Frequency\",\n            data: this.countNodes(nextProps.graph, \"\")\n          }\n        ]\n      }\n    });\n  }\n\n  countNodes(graph, keyword) {\n    let words = graph.nodes;\n    if (words.length === 0) return [];\n    let field = this.props.showField === \"cause\" ? \"effect\" : \"cause\";\n    words = words.filter(node => filterIfDefined(field, keyword, node));\n    words = words.map(node => node.mfic);\n    words = words.filter(word => word !== \"\");\n    words = count(words);\n    words = json2tuples(words);\n    words = sortCounts(words);\n    return words;\n  }\n\n  setHoverData = e => {\n    this.setState({ hoverData: e.target.category });\n  };\n\n  updateInput = evt => {\n    this.setState({ inputValue: evt.target.value.toLowerCase() }, () => {\n      let itemsToPlot = this.countNodes(\n        this.props.graph,\n        this.state.inputValue\n      );\n      this.setState(prevState => ({\n        ...prevState,\n        chartOptions: {\n          ...prevState.chartOptions,\n          series: [\n            {\n              name: \"Frequency\",\n              data: itemsToPlot\n            }\n          ],\n          title: {\n            text:\n              \"Show effects for cause: \" +\n              (this.state.inputValue === \"\" ? \"all\" : this.state.inputValue)\n          }\n        }\n      }));\n    });\n  };\n\n  render() {\n    const { chartOptions } = this.state;\n    return (\n      <Card className=\"shadow justify-content-between\">\n        <CardBody>\n          <h3>{this.props.title}</h3>\n          <Form inline>\n            <FormGroup>\n              <Label for=\"label\" className=\"mr-2\">\n                Show\n              </Label>\n              <Input\n                value={this.props.showField}\n                type=\"select\"\n                name=\"showField\"\n                id=\"showField\"\n                onChange={this.props.onSelectChange}\n                className=\"mr-2\"\n              >\n                <option value=\"effect\">effects</option>\n                <option value=\"cause\">causes</option>\n              </Input>\n              <Label for=\"searchInput\" className=\"mr-2\">\n                for {this.props.showField === \"cause\" ? \"effect\" : \"cause\"}:\n              </Label>\n              <DebounceInput\n                id=\"searchInput\"\n                className=\"form-control\"\n                value={this.state.inputValue}\n                minLength={2}\n                debounceTimeout={900}\n                onChange={evt => this.updateInput(evt)}\n              />\n            </FormGroup>\n          </Form>\n          {this.props.loading ? (\n            <MainSpinner />\n          ) : (\n            <HighchartsReact highcharts={Highcharts} options={chartOptions} />\n          )}\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default BarChart;\n","import React from \"react\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport Highcharts from \"highcharts\";\nimport HC_exporting from \"highcharts/modules/exporting\";\nimport MainSpinner from \"./spinner.js\";\nimport {\n  sortCounts,\n  count,\n  json2tuples,\n  filterIfDefined\n} from \"./utilities.js\";\nimport { Card, CardBody, Form, FormGroup, Label } from \"reactstrap\";\nimport { DebounceInput } from \"react-debounce-input\";\n\nHC_exporting(Highcharts);\n\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.countNodes = this.countNodes.bind(this);\n    this.state = {\n      inputValue: \"\",\n      chartOptions: {\n        chart: {\n          type: \"column\"\n        },\n        title: {\n          text: \"Show effects for cause: all\"\n        },\n        xAxis: {\n          type: \"category\",\n          labels: {\n            rotation: -55,\n            style: {\n              fontSize: \"9px\",\n              fontFamily: \"Verdana, sans-serif\"\n            }\n          }\n        },\n        yAxis: {\n          min: 0,\n          title: {\n            text: \"Number of occurences\"\n          }\n        },\n        legend: {\n          enabled: false\n        },\n        series: [\n          {\n            name: \"Frequency\",\n            data: this.countNodes(this.props.graph, \"\")\n          }\n        ]\n      }\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      inputValue: \"\",\n      chartOptions: {\n        chart: {\n          type: \"column\"\n        },\n        title: {\n          text: \"Show effects for cause: all\"\n        },\n        xAxis: {\n          type: \"category\",\n          labels: {\n            rotation: -55,\n            style: {\n              fontSize: \"9px\",\n              fontFamily: \"Verdana, sans-serif\"\n            }\n          }\n        },\n        yAxis: {\n          min: 0,\n          title: {\n            text: \"Number of occurences\"\n          }\n        },\n        legend: {\n          enabled: false\n        },\n        series: [\n          {\n            name: \"Frequency\",\n            data: this.countNodes(nextProps.graph, \"\")\n          }\n        ]\n      }\n    });\n  }\n\n  countNodes(graph, keyword) {\n    let words = graph.nodes;\n    if (words.length === 0) return [];\n    words = words.filter(node => filterIfDefined(\"text\", keyword, node));\n    words = words.map(node => node.mfic);\n    words = words.filter(word => word !== \"\");\n    words = count(words);\n    words = json2tuples(words);\n    words = sortCounts(words);\n    return words;\n  }\n\n  setHoverData = e => {\n    this.setState({ hoverData: e.target.category });\n  };\n\n  updateInput = evt => {\n    this.setState({ inputValue: evt.target.value.toLowerCase() }, () => {\n      let itemsToPlot = this.countNodes(\n        this.props.graph,\n        this.state.inputValue\n      );\n      this.setState(prevState => ({\n        ...prevState,\n        chartOptions: {\n          ...prevState.chartOptions,\n          series: [\n            {\n              name: \"Frequency\",\n              data: itemsToPlot\n            }\n          ],\n          title: {\n            text:\n              \"Show effects for cause: \" +\n              (this.state.inputValue === \"\" ? \"all\" : this.state.inputValue)\n          }\n        }\n      }));\n    });\n  };\n\n  render() {\n    const { chartOptions } = this.state;\n    return (\n      <Card className=\"shadow justify-content-between\">\n        <CardBody>\n          <h3>{this.props.title}</h3>\n          <Form inline>\n            <FormGroup>\n              <Label for=\"label\" className=\"mr-2\">\n                Search in sentences:\n              </Label>\n              <DebounceInput\n                id=\"searchInput\"\n                className=\"form-control\"\n                value={this.state.inputValue}\n                minLength={2}\n                debounceTimeout={900}\n                onChange={evt => this.updateInput(evt)}\n              />\n            </FormGroup>\n          </Form>\n          {this.props.loading ? (\n            <MainSpinner />\n          ) : (\n            <HighchartsReact highcharts={Highcharts} options={chartOptions} />\n          )}\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default BarChart;\n","import React from \"react\";\nimport { ForceGraph2D } from \"react-force-graph\";\nimport { SizeMe } from \"react-sizeme\";\nimport { BASE_URL, HEADERS } from \"./utilities.js\";\nimport MainSpinner from \"./spinner.js\";\nimport TextBarChart from \"./textbarchart.js\";\nimport { Card, CardBody, Form, FormGroup } from \"reactstrap\";\nimport { DebounceInput } from \"react-debounce-input\";\n\nclass TextGraph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    this.state = {\n      showField: \"effect\",\n      keywordField: \"cause\",\n      loading: false,\n      inputValue: \"\"\n    };\n  }\n\n  handleSelectChange({ target }) {\n    console.log(target.value);\n    this.setState(\n      {\n        showField: target.value\n      },\n      this.fetchGraph\n    );\n  }\n\n  fetchGraph() {\n    this.setState({ loading: true });\n    const url = BASE_URL + \"get-statements\";\n    let type = this.state.showField;\n    fetch(url, {\n      method: \"POST\",\n      headers: HEADERS,\n      body: JSON.stringify({\n        type: type,\n        data: this.props.dataset.data\n      })\n    })\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        this.setState({ graph: data, loading: false, origGraph: data });\n      })\n      .catch(error => console.log(error));\n  }\n\n  componentDidMount() {\n    this.fetchGraph();\n  }\n\n  updateInput = evt => {\n    this.setState({ inputValue: evt.target.value.toLowerCase() }, () => {\n      let nodesToKeep = this.state.origGraph.nodes.map(node => node.id);\n      if (this.state.inputValue !== \"\") {\n        console.log(this.state.inputValue, this.state.origGraph.nodes);\n        nodesToKeep = this.state.origGraph.nodes.filter(node =>\n          node.text.includes(this.state.inputValue)\n        );\n        nodesToKeep = nodesToKeep.map(node => node.id);\n      }\n      this.setState({\n        graph: {\n          nodes: this.state.origGraph.nodes.filter(node =>\n            nodesToKeep.includes(node.id)\n          ),\n          links: this.state.origGraph.links.filter(\n            link =>\n              nodesToKeep.includes(link.target.id) &&\n              nodesToKeep.includes(link.source.id)\n          )\n        }\n      });\n    });\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.dataset.showNodeDistribution && this.state.graph && (\n          <TextBarChart\n            loading={this.state.loading}\n            graph={this.state.graph}\n            title=\"Frequency of common sentences given by the statement graph\"\n          />\n        )}\n        <SizeMe monitorHeight>\n          {({ size }) => (\n            <Card className=\"shadow justify-content-between\">\n              <CardBody>\n                <h3>{this.props.title}</h3>\n                <Form inline>\n                  <FormGroup>\n                    Search in sentences:\n                    <DebounceInput\n                      id=\"searchInput\"\n                      className=\"form-control\"\n                      value={this.state.inputValue}\n                      minLength={2}\n                      debounceTimeout={900}\n                      onChange={evt => this.updateInput(evt)}\n                    />\n                  </FormGroup>\n                </Form>\n                {this.state.loading ? (\n                  <MainSpinner />\n                ) : (\n                  this.state.graph && (\n                    <ForceGraph2D\n                      nodeLabel={\"text\"}\n                      graphData={this.state.graph}\n                      nodeCanvasObjectMode={() => \"after\"}\n                      nodeCanvasObject={(node, ctx, globalScale) => {\n                        const label = node.mfic;\n                        if (!label) return;\n                        const fontSize = 12 / globalScale;\n                        ctx.font = `${fontSize}px Sans-Serif`;\n                        const textWidth = ctx.measureText(label).width;\n                        const bckgDimensions = [textWidth, fontSize].map(\n                          n => n + fontSize * 0.2\n                        ); // some padding\n                        ctx.fillStyle = \"rgba(255, 255, 255, 0.8)\";\n                        ctx.fillRect(\n                          node.x - bckgDimensions[0] / 2,\n                          node.y - bckgDimensions[1] / 2,\n                          ...bckgDimensions\n                        );\n                        ctx.textAlign = \"center\";\n                        ctx.textBaseline = \"middle\";\n                        ctx.fillStyle = \"blue\"; //node.color;\n                        ctx.fillText(label, node.x, node.y);\n                      }}\n                      linkDirectionalArrowLength={5}\n                      linkDirectionalArrowRelPos={1}\n                      linkOpacity={0.5}\n                      linkWidth={link => (link.weight ? link.weight : 1)}\n                      width={size.width - 30}\n                      height={600}\n                    />\n                  )\n                )}\n              </CardBody>\n            </Card>\n          )}\n        </SizeMe>\n      </>\n    );\n  }\n}\n\nexport default TextGraph;\n","import React from \"react\";\nimport { ForceGraph2D } from \"react-force-graph\";\nimport { SizeMe } from \"react-sizeme\";\nimport { BASE_URL, HEADERS, filterIfDefined } from \"./utilities.js\";\nimport MainSpinner from \"./spinner.js\";\nimport BarChart from \"./barchart.js\";\nimport TextGraph from \"./textgraph.js\";\nimport {\n  Card,\n  CardBody,\n  Col,\n  Row,\n  Form,\n  Input,\n  FormGroup,\n  Label\n} from \"reactstrap\";\nimport { render_displacy } from \"./utilities.js\";\nimport { DebounceInput } from \"react-debounce-input\";\n\nclass GraphRow extends React.Component {\n  render() {\n    if (!this.props.datasets) return null;\n    return (\n      <Row>\n        {this.props.datasets.map(\n          dataset =>\n            dataset.showGraphText && (\n              <Col sm=\"6\" key={dataset.name}>\n                <TextGraph\n                  dataset={dataset}\n                  title=\"Statement graph from sentences\"\n                  kind=\"text\"\n                />\n              </Col>\n            )\n        )}\n        {this.props.datasets.map(\n          dataset =>\n            dataset.showGraphFrame && (\n              <Col sm=\"6\" key={dataset.name}>\n                <Graph\n                  dataset={dataset}\n                  title=\"Statement graph from causal relations\"\n                  kind=\"frames\"\n                />\n              </Col>\n            )\n        )}\n      </Row>\n    );\n  }\n}\n\nclass Graph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    this.state = {\n      showField: \"effect\",\n      keywordField: \"cause\",\n      loading: false,\n      inputValue: \"\"\n    };\n  }\n\n  handleSelectChange({ target }) {\n    this.setState(\n      {\n        showField: target.value,\n        keywordField: target.value === \"cause\" ? \"effect\" : \"cause\"\n      },\n      this.fetchGraph\n    );\n  }\n\n  fetchGraph() {\n    this.setState({ loading: true });\n    const url = BASE_URL + \"get-statements\";\n    let type = this.state.showField;\n    fetch(url, {\n      method: \"POST\",\n      headers: HEADERS,\n      body: JSON.stringify({\n        type: type,\n        data: this.props.dataset.data\n      })\n    })\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        this.setState({ graph: data, loading: false, origGraph: data });\n      })\n      .catch(error => {\n        alert(error);\n        this.setState({ loading: false });\n      });\n  }\n\n  componentDidMount() {\n    this.fetchGraph();\n  }\n\n  updateInput = evt => {\n    this.setState({ inputValue: evt.target.value.toLowerCase() }, () => {\n      let nodesToKeep = this.state.origGraph.nodes.map(node => node.id);\n      if (this.state.inputValue !== \"\") {\n        nodesToKeep = this.state.origGraph.nodes.filter(node =>\n          filterIfDefined(this.state.keywordField, this.state.inputValue, node)\n        );\n        nodesToKeep = nodesToKeep.map(node => node.id);\n      }\n      this.setState({\n        graph: {\n          nodes: this.state.origGraph.nodes.filter(node =>\n            nodesToKeep.includes(node.id)\n          ),\n          links: this.state.origGraph.links.filter(\n            link =>\n              nodesToKeep.includes(link.target.id) &&\n              nodesToKeep.includes(link.source.id)\n          )\n        }\n      });\n    });\n  };\n\n  render() {\n    function returnLabel(node) {\n      let utterance = node.utterance.split(\" \");\n      utterance = utterance.map(w => w + \" \");\n\n      let causeIdcs = node.cause2;\n      let effectIdcs = node.effect2;\n      let fevIdcs = node.frameEvokingElement2;\n\n      let causesMarked;\n      let fev_marked;\n      let effects_marked;\n\n      if (causeIdcs) {\n        causesMarked = causeIdcs.map(i => utterance[i - 1]);\n        causesMarked =\n          `<mark style=\"background-color:#9cc9cc; border-radius: 0.25em\">` +\n          causesMarked.join(\" \") +\n          `<span style=\"font-size:8px;background-color:white;border-radius:0.25em\">CAUSE</span></mark>`;\n      }\n      if (fevIdcs) {\n        fev_marked = fevIdcs.map(i => utterance[i - 1]);\n        fev_marked =\n          `<mark style=\"background-color:#7aecec; border-radius: 0.25em\">` +\n          fev_marked.join(\" \") +\n          `<span style=\"font-size:8px;background-color:white;border-radius:0.25em\">FEV</span></mark>`;\n      }\n      if (effectIdcs) {\n        effects_marked = effectIdcs.map(i => utterance[i - 1]);\n        effects_marked =\n          `<mark style=\"background-color:#ff8197; border-radius: 0.25em\">` +\n          effects_marked.join(\" \") +\n          `<span style=\"font-size:8px;background-color:white;border-radius:0.25em\">EFFECT</span></mark>`;\n      }\n      if (causesMarked) {\n        let before = utterance.length;\n        utterance.splice(causeIdcs[0] - 1, causeIdcs.length, causesMarked);\n        if (before - utterance.length > 0) {\n          utterance.splice(\n            causeIdcs[0],\n            0,\n            ...Array(causeIdcs.length - 1).fill(\" \")\n          );\n        }\n      }\n      if (fev_marked) {\n        let before = utterance.length;\n        utterance.splice(fevIdcs[0] - 1, fevIdcs.length, fev_marked);\n        if (before - utterance.length > 0) {\n          utterance.splice(\n            fevIdcs[0],\n            0,\n            ...Array(fevIdcs.length - 1).fill(\" \")\n          );\n        }\n      }\n      if (effectIdcs) {\n        let before = utterance.length;\n        utterance.splice(effectIdcs[0] - 1, effectIdcs.length, effects_marked);\n        if (before - utterance.length > 0) {\n          utterance.splice(\n            effectIdcs[0],\n            0,\n            ...Array(effectIdcs.length - 1).fill(\" \")\n          );\n        }\n      }\n      return utterance.join(\" \");\n    }\n\n    return (\n      <>\n        {this.props.dataset.showNodeDistribution && this.state.graph && (\n          <BarChart\n            loading={this.state.loading}\n            onSelectChange={this.handleSelectChange}\n            showField={this.state.showField}\n            graph={this.state.graph}\n            title=\"Frequencies of Causes/Effects\"\n          />\n        )}\n        <SizeMe monitorHeight>\n          {({ size }) => (\n            <Card className=\"shadow justify-content-between\">\n              <CardBody>\n                <h3>{this.props.title}</h3>\n                <Form inline>\n                  <FormGroup>\n                    <Label for=\"label\" className=\"mr-2\">\n                      Show\n                    </Label>\n                    <Input\n                      value={this.state.showField}\n                      type=\"select\"\n                      name=\"showField\"\n                      id=\"showField\"\n                      onChange={this.handleSelectChange}\n                      className=\"mr-2\"\n                    >\n                      <option value=\"effect\">effects</option>\n                      <option value=\"cause\">causes</option>\n                    </Input>\n                    <Label for=\"searchInput\" className=\"mr-2\">\n                      for {this.state.keywordField}:\n                    </Label>\n                    <DebounceInput\n                      id=\"searchInput\"\n                      className=\"form-control\"\n                      value={this.state.inputValue}\n                      minLength={2}\n                      debounceTimeout={900}\n                      onChange={evt => this.updateInput(evt)}\n                    />\n                  </FormGroup>\n                </Form>\n                {this.state.loading ? (\n                  <MainSpinner />\n                ) : (\n                  this.state.graph && (\n                    <ForceGraph2D\n                      graphData={this.state.graph}\n                      nodeLabel={returnLabel}\n                      nodeCanvasObjectMode={() => \"after\"}\n                      nodeCanvasObject={(node, ctx, globalScale) => {\n                        const label = node.mfic;\n                        if (!label) return;\n                        const fontSize = 12 / globalScale;\n                        ctx.font = `${fontSize}px Sans-Serif`;\n                        const textWidth = ctx.measureText(label).width;\n                        const bckgDimensions = [textWidth, fontSize].map(\n                          n => n + fontSize * 0.2\n                        ); // some padding\n                        ctx.fillStyle = \"rgba(255, 255, 255, 0.8)\";\n                        ctx.fillRect(\n                          node.x - bckgDimensions[0] / 2,\n                          node.y - bckgDimensions[1] / 2,\n                          ...bckgDimensions\n                        );\n                        ctx.textAlign = \"center\";\n                        ctx.textBaseline = \"middle\";\n                        ctx.fillStyle = \"blue\"; //node.color;\n                        ctx.fillText(label, node.x, node.y);\n                      }}\n                      linkDirectionalArrowLength={5}\n                      linkDirectionalArrowRelPos={1}\n                      linkOpacity={0.5}\n                      linkWidth={link => (link.weight ? link.weight : 1)}\n                      width={size.width - 30}\n                      height={600}\n                    />\n                  )\n                )}\n              </CardBody>\n            </Card>\n          )}\n        </SizeMe>\n      </>\n    );\n  }\n}\n\nexport default GraphRow;\n","import React from \"react\";\nimport { Card, CardBody, CardTitle, CardText, Row, Col } from \"reactstrap\";\n\nclass JsonCard extends React.Component {\n  render() {\n    const field = this.props.field;\n    if (!this.props.data) return null;\n\n    return (\n      <Row>\n        {this.props.data.map(\n          dataset =>\n            dataset[field] && (\n              <Col sm=\"6\" key={dataset.name}>\n                <Card className=\"shadow justify-content-between\">\n                  <CardBody>\n                    <CardTitle className=\"text-center\">\n                      <h3>{this.props.title}</h3>\n                    </CardTitle>\n                    <CardText style={{ height: \"150px\", overflow: \"auto\" }}>\n                      {JSON.stringify(dataset[field], null, 4)}\n                    </CardText>\n                  </CardBody>\n                </Card>\n              </Col>\n            )\n        )}\n      </Row>\n    );\n  }\n}\n\nexport default JsonCard;\n","import React, { Component } from \"react\";\nimport { Col, Card, Row, CardBody, Label, FormGroup } from \"reactstrap\";\n\nimport HighchartsReact from \"highcharts-react-official\";\nimport Highcharts from \"highcharts\";\nimport HC_exporting from \"highcharts/modules/exporting\";\n\nimport { DebounceInput } from \"react-debounce-input\";\n\nHC_exporting(Highcharts);\n\nclass LineRowCards extends Component {\n  render() {\n    return (\n      <>\n        {this.props.datasets.length > 0 &&\n          this.props.datasets.map(\n            (dataset) =>\n              dataset.showEntitiesPlot && (\n                <>\n                  {dataset.entities && (\n                    <LineChart\n                      title=\"Named Entities frequencies over time\"\n                      showInitialData={false}\n                      key={dataset.name}\n                      data={dataset.entities.data}\n                      categories={dataset.entities.categories}\n                    />\n                  )}\n                  {dataset.articleCounts && (\n                    <NormalLineChart\n                      title=\"Article counts over time\"\n                      showInitialData={true}\n                      key={dataset.name}\n                      data={dataset.articleCounts.data}\n                      categories={dataset.articleCounts.categories}\n                    />\n                  )}\n                  {dataset.wordCounts && (\n                    <LineChart\n                      title=\"word counts over time\"\n                      showInitialData={false}\n                      key={dataset.name}\n                      data={dataset.wordCounts.data}\n                      categories={dataset.wordCounts.categories}\n                    />\n                  )}\n                </>\n              )\n          )}\n      </>\n    );\n  }\n}\n\nclass NormalLineChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: \"\",\n      chartOptions: {\n        chart: { type: \"area\" },\n        xAxis: {\n          maxPadding: 0,\n          type: \"category\",\n          crosshair: true,\n          categories: this.props.categories,\n        },\n        title: { text: this.props.title },\n        plotOptions: {\n          area: {\n            stacking: \"normal\",\n            lineColor: \"#666666\",\n            lineWidth: 1,\n            marker: { lineWidth: 1, lineColor: \"#666666\" },\n          },\n        },\n        series: this.props.showInitialData ? this.props.data : [],\n      },\n    };\n  }\n\n  setHoverData = (e) => {\n    this.setState({ hoverData: e.target.category });\n  };\n\n  render() {\n    const { chartOptions } = this.state;\n    return (\n      <Row>\n        <Col>\n          <Card className=\"shadow justify-content-between\">\n            <CardBody>\n              <HighchartsReact highcharts={Highcharts} options={chartOptions} />\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nclass LineChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: \"\",\n      chartOptions: {\n        chart: { type: \"area\" },\n        xAxis: {\n          maxPadding: 0,\n          type: \"category\",\n          crosshair: true,\n          categories: this.props.categories,\n        },\n        title: { text: this.props.title },\n        plotOptions: {\n          area: {\n            stacking: \"normal\",\n            lineColor: \"#666666\",\n            lineWidth: 1,\n            marker: { lineWidth: 1, lineColor: \"#666666\" },\n          },\n        },\n        series: this.props.showInitialData ? this.props.data : [],\n      },\n    };\n  }\n\n  setHoverData = (e) => {\n    this.setState({ hoverData: e.target.category });\n  };\n\n  updateInput = (evt) => {\n    if (!evt.target.value) return;\n    this.setState({ inputValue: evt.target.value.toLowerCase() }, () => {\n      let itemsToPlot = this.props.data.filter((data) =>\n        data.name.toLowerCase().includes(this.state.inputValue)\n      );\n      this.setState((prevState) => ({\n        ...prevState,\n        chartOptions: {\n          ...prevState.chartOptions,\n          series: itemsToPlot,\n        },\n      }));\n    });\n  };\n\n  render() {\n    const { chartOptions } = this.state;\n    return (\n      <Row>\n        <Col>\n          <Card className=\"shadow justify-content-between\">\n            <CardBody>\n              <Row form>\n                <Col md={2}>\n                  <FormGroup>\n                    <Label for=\"searchInput\">Search terms containing: </Label>\n                    <DebounceInput\n                      id=\"searchInput\"\n                      className=\"form-control\"\n                      value={this.state.inputValue}\n                      minLength={3}\n                      debounceTimeout={900}\n                      onChange={(evt) => this.updateInput(evt)}\n                    />\n                  </FormGroup>\n                </Col>\n              </Row>\n              <HighchartsReact highcharts={Highcharts} options={chartOptions} />\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default LineRowCards;\n","import React, { Component } from \"react\";\nimport {\n  Col,\n  Card,\n  Row,\n  CardBody,\n  Label,\n  FormGroup,\n  Form,\n  Input\n} from \"reactstrap\";\nimport { json2tuples, sortCounts, filterIfDefined } from \"./utilities.js\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport Highcharts from \"highcharts\";\nimport HC_exporting from \"highcharts/modules/exporting\";\nimport { DebounceInput } from \"react-debounce-input\";\nimport stringSimilarity from \"string-similarity\";\nHC_exporting(Highcharts);\n\n//After cause sentences\n\nclass BarRowCards extends Component {\n  render() {\n    return (\n      <Row>\n        {this.props.datasets.length > 0 &&\n          this.props.datasets.map(\n            dataset =>\n              dataset.showCausesPlot && (\n                <Col sm=\"6\" key={dataset.name}>\n                  <BarChart dataset={dataset} />\n                </Col>\n              )\n          )}\n      </Row>\n    );\n  }\n}\n\nclass BarChart extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    this.state = {\n      showField: \"effect\",\n      keywordField: \"cause\",\n      inputValue: \"\",\n      chartOptions: {\n        chart: {\n          type: \"column\"\n        },\n        title: {\n          text: \"Show effects for cause keyword: *\"\n        },\n        xAxis: {\n          type: \"category\",\n          labels: {\n            rotation: -55,\n            style: {\n              fontSize: \"9px\",\n              fontFamily: \"Verdana, sans-serif\"\n            }\n          }\n        },\n        yAxis: {\n          allowDecimals: false,\n          min: 0,\n          title: {\n            text: \"Number of occurences\"\n          }\n        },\n        legend: {\n          enabled: false\n        },\n        series: [\n          {\n            name: \"Frequency\",\n            data: this.count(this.props.dataset.data, \"\", \"cause\", \"effect\")\n          }\n        ]\n      }\n    };\n  }\n\n  count(data, keyword, keywordField, showField) {\n    let commentFrames = data\n      .map(d => d.framesets)\n      .map(lst =>\n        lst\n          .filter(e => e.entities)\n          .map(e => e.entities)\n          .flat()\n          .filter(e => filterIfDefined(keywordField, keyword, e))\n          .map(e => e[showField])\n      )\n      .map(lst => [...new Set(lst)])\n      .filter(lst => lst.length)\n      .flat()\n      .filter(e => typeof e === \"string\" && e !== \"\")\n      .map(e => e.toLowerCase());\n\n    //https://www.npmjs.com/package/string-similarity#api\n\n    function scan(res, sentence) {\n      let found = {};\n      Object.keys(res).forEach((k, i) => {\n        let sim = stringSimilarity.compareTwoStrings(k, sentence);\n        if (sim > 0.6) {\n          found[k] = sim;\n        }\n      });\n      //return best match\n      if (Object.entries(found).length === 0 && found.constructor === Object)\n        return false;\n      return Object.keys(found).reduce((a, b) => (found[a] > found[b] ? a : b));\n    }\n\n    let res = {};\n    commentFrames.forEach(sentence => {\n      if (sentence in res) {\n        //add restuple + 1\n        console.log(\"SAME\", sentence, \" - \", sentence);\n        res[sentence] = res[sentence] + 1;\n      } else {\n        let found = scan(res, sentence);\n        if (found) {\n          //add restuple + 1\n          console.log(\"SIMILAR\", sentence, \" - \", found);\n          res[found] = res[found] + 1;\n        } else {\n          //add new restuple with sentence = 1\n          console.log(\"NEW\", \" - \", sentence);\n          res[sentence] = 1;\n        }\n      }\n    });\n\n    res = json2tuples(res);\n    res = sortCounts(res);\n    return res;\n  }\n\n  setHoverData = e => {\n    this.setState({ hoverData: e.target.category });\n  };\n\n  updateChart() {\n    let itemsToPlot = this.count(\n      this.props.dataset.data,\n      this.state.inputValue,\n      this.state.keywordField,\n      this.state.showField\n    );\n    this.setState(prevState => ({\n      ...prevState,\n      chartOptions: {\n        ...prevState.chartOptions,\n        series: [\n          {\n            name: \"Frequency\",\n            data: itemsToPlot\n          }\n        ],\n        title: {\n          text:\n            \"Show \" +\n            this.state.showField +\n            \"s for \" +\n            this.state.keywordField +\n            \" keyword: \" +\n            (this.state.inputValue === \"\" ? \"*\" : this.state.inputValue)\n        }\n      }\n    }));\n  }\n\n  updateInput = evt => {\n    this.setState({ inputValue: evt.target.value.toLowerCase() }, () =>\n      this.updateChart()\n    );\n  };\n\n  handleSelectChange({ target }) {\n    this.setState(\n      {\n        showField: target.value,\n        keywordField: target.value === \"cause\" ? \"effect\" : \"cause\"\n      },\n      () => {\n        this.updateChart();\n      }\n    );\n  }\n\n  render() {\n    const { chartOptions } = this.state;\n    return (\n      <Card className=\"shadow justify-content-between\">\n        <CardBody>\n          <Form inline>\n            <FormGroup>\n              <Label for=\"label\" className=\"mr-2\">\n                Show\n              </Label>\n              <Input\n                value={this.state.showField}\n                type=\"select\"\n                name=\"showField\"\n                id=\"showField\"\n                onChange={this.handleSelectChange}\n                className=\"mr-2\"\n              >\n                <option value=\"effect\">effects</option>\n                <option value=\"cause\">causes</option>\n              </Input>\n              <Label for=\"searchInput\" className=\"mr-2\">\n                for {this.state.keywordField}:\n              </Label>\n              <DebounceInput\n                id=\"searchInput\"\n                className=\"form-control\"\n                value={this.state.inputValue}\n                minLength={2}\n                debounceTimeout={900}\n                onChange={evt => this.updateInput(evt)}\n              />\n            </FormGroup>\n          </Form>\n          <HighchartsReact highcharts={Highcharts} options={chartOptions} />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default BarRowCards;\n","import React from \"react\";\nimport { ForceGraph2D } from \"react-force-graph\";\nimport { SizeMe } from \"react-sizeme\";\nimport { filterIfDefined, convertLowerCaser } from \"./utilities.js\";\nimport {\n  Card,\n  CardBody,\n  Col,\n  Row,\n  CardTitle,\n  FormGroup,\n  Label,\n} from \"reactstrap\";\nimport { DebounceInput } from \"react-debounce-input\";\n\nclass GraphRow extends React.Component {\n  render() {\n    if (!this.props.datasets) return null;\n    return (\n      <Row>\n        {this.props.datasets.map(\n          (dataset) =>\n            dataset.showCausalMap && (\n              <Col sm=\"6\" key={dataset.name}>\n                <Graph dataset={dataset} />\n              </Col>\n            )\n        )}\n      </Row>\n    );\n  }\n}\n\nclass Graph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getGraph = this.getGraph.bind(this);\n    this.updateGraph = this.updateGraph.bind(this);\n    this.state = {\n      inputValue: \"\",\n      graph: this.getGraph(\"\", \"cause\"),\n      label: \"cause\",\n    };\n  }\n\n  getGraph(keyword) {\n    if (!this.props.dataset.data.length > 0) return { nodes: [], links: [] };\n    let triples = this.props.dataset.data\n      .map((d) => d.framesets)\n      .map((lst) => lst.filter((e) => e.entities))\n      .map((lst) => lst.map((e) => e.entities))\n      .map((lst) => [...new Set(lst.flat())]) //count once per comment!\n      .filter((lst) => lst.length)\n      .flat()\n      .filter(\n        (e) =>\n          filterIfDefined(\"cause\", keyword, e) ||\n          filterIfDefined(\"effect\", keyword, e)\n      )\n      .map((e) => convertLowerCaser(e));\n    let nodes = [];\n    let links = [];\n    const seen_causes = new Set();\n    const seen_effects = new Set();\n\n    triples.forEach((triple, i) => {\n      if (triple.cause) {\n        if (seen_effects.has(triple.cause)) {\n          //The cause is also an effect\n          let idx = nodes.findIndex((node) => node.id === triple.cause);\n          nodes[idx].group = 3;\n          nodes[idx].val = nodes[idx].val + 1;\n        } else {\n          if (!seen_causes.has(triple.cause)) {\n            seen_causes.add(triple.cause);\n            nodes.push({\n              id: triple.cause,\n              label: triple.cause,\n              group: 1,\n              val: 1,\n            });\n          }\n        }\n      }\n      if (triple.effect) {\n        if (seen_causes.has(triple.effect)) {\n          //The effect is also a cause\n          let idx = nodes.findIndex((node) => node.id === triple.effect);\n          nodes[idx].group = 3;\n          nodes[idx].val = nodes[idx].val + 1;\n        } else {\n          if (!seen_effects.has(triple.effect)) {\n            seen_effects.add(triple.effect);\n            nodes.push({\n              id: triple.effect,\n              label: triple.effect,\n              group: 2,\n              val: 1,\n            });\n          }\n        }\n      }\n      if (triple.cause && triple.effect)\n        //TODO check if exists if so increase weight by one\n        links.push({\n          weight: 1,\n          source: triple.cause,\n          target: triple.effect,\n          label: \"causes\", //triple.frameEvokingElement,\n          color: \"red\",\n        });\n    });\n    return { nodes: nodes, links: links };\n  }\n\n  updateGraph() {\n    this.setState({\n      graph: this.getGraph(this.state.inputValue),\n    });\n  }\n\n  updateInput = (evt) => {\n    this.setState({ inputValue: evt.target.value.toLowerCase() }, () => {\n      this.updateGraph();\n    });\n  };\n\n  render() {\n    return (\n      <SizeMe monitorHeight>\n        {({ size }) => (\n          <Card className=\"shadow justify-content-between\">\n            <CardBody>\n              <Row>\n                <Col sm=\"6\">\n                  <CardTitle className=\"text-center\">\n                    <h3>{\"Causal Map\"}</h3>\n                  </CardTitle>\n                </Col>\n                <Col sm=\"6\">\n                  <FormGroup>\n                    <Label for=\"searchInput\">Search </Label>\n                    <DebounceInput\n                      id=\"searchInput\"\n                      className=\"form-control\"\n                      value={this.state.inputValue}\n                      minLength={1}\n                      debounceTimeout={900}\n                      onChange={(evt) => this.updateInput(evt)}\n                    />\n                  </FormGroup>\n                </Col>\n              </Row>\n              <ForceGraph2D\n                graphData={this.state.graph}\n                nodeAutoColorBy=\"group\"\n                nodeLabel={(node) => node.label}\n                width={size.width - 30}\n                height={600}\n                linkDirectionalArrowLength={5}\n                linkDirectionalArrowRelPos={1}\n                linkCanvasObjectMode={() => \"after\"}\n                linkCanvasObject={(link, ctx, globalScale) => {\n                  const label = link.label;\n                  ctx.fillStyle = \"red\";\n                  ctx.fillText(\n                    label,\n                    (link.target.x + link.source.x) / 2,\n                    (link.target.y + link.source.y) / 2\n                  );\n                }}\n                nodeCanvasObject={(node, ctx, globalScale) => {\n                  const label = node.id;\n                  if (!label) return;\n                  const fontSize = 11 / globalScale;\n                  ctx.font = `${fontSize}px Sans-Serif`;\n                  const textWidth = ctx.measureText(label).width;\n                  const bckgDimensions = [textWidth, fontSize].map(\n                    (n) => n + fontSize * 0.2\n                  ); // some padding\n                  ctx.fillStyle = \"rgba(255, 255, 255, 0.8)\";\n                  ctx.fillRect(\n                    node.x - bckgDimensions[0] / 2,\n                    node.y - bckgDimensions[1] / 2,\n                    ...bckgDimensions\n                  );\n                  ctx.textAlign = \"center\";\n                  ctx.textBaseline = \"middle\";\n                  ctx.fillStyle = node.color;\n                  ctx.fillText(label, node.x, node.y);\n                }}\n              />\n            </CardBody>\n            <p> {JSON.stringify(this.state.graph)}</p>\n          </Card>\n        )}\n      </SizeMe>\n    );\n  }\n}\n\nexport default GraphRow;\n","import React from \"react\";\nimport WordTreeRow from \"./wordtree.js\";\nimport Table from \"./table.js\";\nimport { Row, Col } from \"reactstrap\";\nimport GraphRow from \"./graph.js\";\nimport JsonCard from \"./jsoncard.js\";\nimport LineRowCards from \"./linechart.js\";\nimport CauseEffectFrequenciesPlot from \"./causeeffectfrequencies.js\";\nimport MainSpinner from \"./spinner.js\";\nimport CausalMap from \"./causalmap.js\";\n\nclass Dashboard extends React.Component {\n  render() {\n    return (\n      <div>\n        {this.props.isLoading ? (\n          <MainSpinner />\n        ) : (\n          <div>\n            <CausalMap datasets={this.props.datasets} />\n            <CauseEffectFrequenciesPlot datasets={this.props.datasets} />\n            <LineRowCards datasets={this.props.datasets} />\n            <JsonCard\n              data={this.props.datasets}\n              field={\"entities\"}\n              title={\"Entities Json Data\"}\n            />\n            <JsonCard\n              data={this.props.datasets}\n              field={\"articleCounts\"}\n              title={\"Article Counts Json Data\"}\n            />\n            <JsonCard\n              data={this.props.datasets}\n              field={\"wordCounts\"}\n              title={\"Article Counts Json Data\"}\n            />\n            <GraphRow datasets={this.props.datasets} title={\"Plot Graph\"} />\n            <WordTreeRow datasets={this.props.datasets} title={\"Word tree\"} />\n          </div>\n        )}\n        <Row>\n          {this.props.datasets.map((dataset) => (\n            <Col sm=\"6\" key={dataset.name}>\n              <Table dataset={dataset}></Table>\n            </Col>\n          ))}\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport { Container, Col, Row } from \"reactstrap\";\nimport mySvg from \"./logo.svg\";\n\nfunction Home() {\n  return (\n    <Container>\n      <h1 className=\"mt-4 display-4\">Welcome</h1>\n\n      <p className=\"mt-4\">\n        In our present information society, online (social) media are important\n        sites of debate and discussion on a range of current affairs, including\n        nationality and identity, migration, and climate change. As such, these\n        (social) media platforms house a trove of relevant information for the\n        study of cultural and societal conflicts. Harvesting and analyzing this\n        digital information, however, can be challenging.\n      </p>\n\n      <Row>\n        <Col>\n          <p>\n            The Penelope climate change opinion observatory offers a low-barrier\n            collection of instruments for studying opinion landscapes on the\n            climate crisis using data from a range of digital sources. These\n            cover news media (the Guardian), social news media (Reddit),\n            microblogging sites (Twitter), and political discussions\n            (Transcripts of parliamentary debates from the UK and Germany). The\n            platform thus aims to cater to the information needs of researchers,\n            journalists, policy makers and engaged citizens with varying degrees\n            of technical proficiency.\n          </p>\n        </Col>\n        <Col>\n          <img\n            className=\"mt-4 text-center\"\n            src={mySvg}\n            width=\"300\"\n            alt=\"Logo\"\n          />\n        </Col>\n      </Row>\n\n      <p>\n        The observatory’s interface offers users the flexibility to chain\n        together data analytics components developed in the ODYCCEUS project\n        into custom pipelines. These components cover the research cycle from\n        the phase of data gathering up to the actual reporting on analyses.\n        Current tools within the climate change opinion observatory include:\n      </p>\n      <ul className=\"m-4\">\n        <li>\n          Data from the aforementioned sources and an interface for selecting\n          and filtering data by keywords, date range and number of posts or\n          articles.\n        </li>\n        <li>\n          Preprocessing components for extracting textual information of\n          interest, including named entities, word co-occurrences, and causal\n          frames.\n        </li>\n        <li>\n          Components for in-depth analysis and visualization of the extracted\n          information, including causal maps, plots of causal distributions, and\n          statement graphs.\n        </li>\n        <li>\n          A reporting tool that fosters reproducibility of the research by\n          keeping track of the activated components and their settings.\n        </li>\n      </ul>\n\n      <p>\n        Users interested in contributing their own components or exploring the\n        possibilities of existing components in the Penelope ecosystem can refer\n        to the Penelope community page for the latest news and updates on the\n        project.\n      </p>\n    </Container>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Container } from \"reactstrap\";\n\nfunction About() {\n  return (\n    <Container>\n      <h1 className=\"mt-4\">About</h1>\n      <p className=\"mt-4\">\n        This application has been developed by the Evolutionary and Hybrid AI\n        team at VUB for the ODYCCEUS project founded by the H2020 FETPROACT\n        program of the European Commission. It is hosted by the AI lab Brussels.\n      </p>\n    </Container>\n  );\n}\n\nexport default About;\n","import React from \"react\";\nimport { Container, Row, Col, Button } from \"reactstrap\";\nimport { Link as LinkRouter } from \"react-router-dom\";\n\nimport ScreenshotObservatory from \"./screenshotObservatory.png\";\nimport GifNamedentities from \"./namedEntities.gif\";\nimport GifCausalframes from \"./causalFrames.gif\";\nimport GifStatementGraph from \"./statementGraph.gif\";\n\nimport addDatasetPicture from \"./addDataset.png\";\n\nimport GifCausalMap from \"./causalMap.gif\";\nimport GifWordTree from \"./wordTree.gif\";\nimport GifPlotCounts from \"./plotCounts.gif\";\nimport GifStatementDistribution from \"./statementDistribution.gif\";\nimport GifFrameDistribution from \"./frameDistribution.gif\";\nimport GifTermFreq from \"./termFreq.gif\";\n\nimport Example1 from \"./exampleStep1.png\";\nimport Example2 from \"./exampleStep2.png\";\nimport Example3 from \"./exampleStep3.png\";\nimport Example4 from \"./exampleStep4.png\";\n\nimport { Link, Element } from \"react-scroll\";\n// import { ReactComponent } from \"*.svg\";\n\n// function SvgWithXlink(props) {\n//   return (\n//     <svg\n//       width=\"100%\"\n//       height=\"100%\"\n//       xmlns=\"http://www.w3.org/2000/svg\"\n//       xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n//     >\n//       <defs>\n//         <g id=\"Port\">\n//           <circle style={{ fill: \"inherit\" }} r=\"10\" />\n//         </g>\n//       </defs>\n//       <text y=\"15\">black</text>\n//       <use x=\"70\" y=\"10\" xlinkHref=\"#Port\" />\n//       <text y=\"35\">hey</text>\n//       <use x=\"70\" y=\"30\" xlinkHref=\"#Port\" className=\"classA\" />\n//       <text y=\"55\">blue</text>\n//       <use x=\"0\" y=\"50\" xlinkHref=\"#Port\" style={{ fill: \"blue\" }} />\n//     </svg>\n//   );\n// }\n\nclass Turorial extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col className=\"mt-4\" xs=\"3\" sm=\"3\" lg=\"3\">\n            <div\n              className=\"nav flex-column nav-pills ml-2\"\n              style={{ position: \"fixed\", fontSize: \"13px\" }}\n            >\n              <Row>\n                <Link\n                  className=\"nav-link mb-2\"\n                  activeClass=\"active bg-danger\"\n                  to=\"section1\"\n                  spy={true}\n                  smooth={true}\n                  duration={250}\n                  offset={-100}\n                >\n                  Introduction\n                </Link>\n              </Row>\n              <Row>\n                <Link\n                  className=\"nav-link mb-2\"\n                  activeClass=\"active bg-danger\"\n                  to=\"section2\"\n                  spy={true}\n                  smooth={true}\n                  duration={250}\n                  offset={-100}\n                >\n                  Observatory\n                </Link>\n              </Row>\n              <Row>\n                <Link\n                  className=\"nav-link ml-4 mb-2\"\n                  activeClass=\"active bg-danger\"\n                  to=\"section2_1\"\n                  spy={true}\n                  smooth={true}\n                  duration={250}\n                  offset={-100}\n                >\n                  Pipeline\n                </Link>\n              </Row>\n              <Row>\n                <Link\n                  className=\"nav-link ml-4 mb-2\"\n                  activeClass=\"active bg-danger\"\n                  to=\"section2_2\"\n                  spy={true}\n                  smooth={true}\n                  duration={250}\n                  offset={-100}\n                >\n                  Dashboard\n                </Link>\n              </Row>\n              <Row>\n                <Link\n                  className=\"nav-link mb-2\"\n                  activeClass=\"active bg-danger\"\n                  to=\"section3\"\n                  spy={true}\n                  smooth={true}\n                  duration={250}\n                  offset={-100}\n                >\n                  Methods and Components\n                </Link>\n              </Row>\n              <Row>\n                <Link\n                  className=\"nav-link mb-2 ml-4\"\n                  activeClass=\"active bg-danger\"\n                  to=\"section3_0\"\n                  spy={true}\n                  smooth={true}\n                  duration={250}\n                  offset={-100}\n                >\n                  Adding datasets\n                </Link>\n              </Row>\n              <Row>\n                <Link\n                  className=\"nav-link mb-2 ml-4\"\n                  activeClass=\"active bg-danger\"\n                  to=\"section3_1\"\n                  spy={true}\n                  smooth={true}\n                  duration={250}\n                  offset={-100}\n                >\n                  Named Entity Recognition\n                </Link>\n              </Row>\n              <Row>\n                <Link\n                  className=\"nav-link mb-2 ml-4\"\n                  activeClass=\"active bg-danger\"\n                  to=\"section3_2\"\n                  spy={true}\n                  smooth={true}\n                  duration={250}\n                  offset={-100}\n                >\n                  Causal Relation Extraction\n                </Link>\n              </Row>\n              <Row>\n                <Link\n                  className=\"nav-link mb-2 ml-4\"\n                  activeClass=\"active bg-danger\"\n                  to=\"section3_3\"\n                  spy={true}\n                  smooth={true}\n                  duration={250}\n                  offset={-100}\n                >\n                  Statement Graph\n                </Link>\n              </Row>\n              <Row>\n                <Link\n                  className=\"nav-link mb-2 ml-4\"\n                  activeClass=\"active bg-danger\"\n                  to=\"section3_4\"\n                  spy={true}\n                  smooth={true}\n                  duration={250}\n                  offset={-100}\n                >\n                  Term Frequency\n                </Link>\n              </Row>\n              <Row>\n                <Link\n                  className=\"nav-link mb-2 ml-4\"\n                  activeClass=\"active bg-danger\"\n                  to=\"section3_5\"\n                  spy={true}\n                  smooth={true}\n                  duration={250}\n                  offset={-100}\n                >\n                  Word Tree\n                </Link>\n              </Row>\n              <Row>\n                <Link\n                  className=\"nav-link mb-2 ml-4\"\n                  activeClass=\"active bg-danger\"\n                  to=\"section3_6\"\n                  spy={true}\n                  smooth={true}\n                  duration={250}\n                  offset={-100}\n                >\n                  Counts\n                </Link>\n              </Row>\n              <Row>\n                <Link\n                  className=\"nav-link mb-2 ml-4\"\n                  activeClass=\"active bg-danger\"\n                  to=\"section3_7\"\n                  spy={true}\n                  smooth={true}\n                  duration={250}\n                  offset={-100}\n                >\n                  Causal Map\n                </Link>\n              </Row>\n              <Row>\n                <Link\n                  className=\"nav-link mb-2 ml-4\"\n                  activeClass=\"active bg-danger\"\n                  to=\"section3_8\"\n                  spy={true}\n                  smooth={true}\n                  duration={250}\n                  offset={-100}\n                >\n                  Causes distribution\n                </Link>\n              </Row>\n              <Row>\n                <Link\n                  className=\"nav-link mb-2 ml-4\"\n                  activeClass=\"active bg-danger\"\n                  to=\"section3_9\"\n                  spy={true}\n                  smooth={true}\n                  duration={250}\n                  offset={-100}\n                >\n                  Statement distribution\n                </Link>\n              </Row>\n              <Row>\n                <Link\n                  className=\"nav-link mb-2\"\n                  activeClass=\"active bg-danger\"\n                  to=\"section4\"\n                  spy={true}\n                  smooth={true}\n                  duration={250}\n                  offset={-100}\n                >\n                  Example Pipeline{\" \"}\n                </Link>\n              </Row>\n              <Row>\n                <Link\n                  className=\"nav-link mb-2\"\n                  activeClass=\"active bg-danger\"\n                  to=\"section5\"\n                  spy={true}\n                  smooth={true}\n                  duration={250}\n                  offset={-100}\n                >\n                  Acknowledgement and funding\n                </Link>\n              </Row>\n            </div>\n          </Col>\n          <Col xs=\"8\" sm=\"8\" lg=\"8\">\n            <Element name=\"section1\" style={{ minHeight: \"700px\" }}>\n              <h1 className=\"display-2 mt-4\" style={{ minHeight: \"200px\" }}>\n                Manual\n              </h1>\n              <h1 className=\"display-3\">Introduction </h1>\n              <p>\n                The Penelope climate change opinion observatory offers a\n                low-barrier collection of instruments for studying opinion\n                landscapes on the climate crisis using data from a range of\n                digital sources. These cover news media (the Guardian), social\n                news media (Reddit), microblogging sites (Twitter), and\n                political discussions (Transcripts of parliamentary debates from\n                the UK and Germany). The platform thus aims to cater to the\n                information needs of researchers, journalists, policy makers and\n                engaged citizens with varying degrees of technical proficiency.\n              </p>\n              <p>\n                The observatory’s interface offers users the flexibility to\n                chain together data analytics components developed in the\n                ODYCCEUS project into custom pipelines. These components cover\n                the research cycle from the phase of data gathering up to the\n                actual reporting on analyses. Current tools within the climate\n                change opinion observatory include:\n              </p>\n              <ul>\n                <li>\n                  Data from the aforementioned sources and an interface for\n                  selecting and filtering data by keywords, date range and\n                  number of posts or articles.\n                </li>\n                <li>\n                  Preprocessing components for extracting textual information of\n                  interest, including named entities, word co-occurrences, and\n                  causal frames.\n                </li>\n                <li>\n                  Components for in-depth analysis and visualization of the\n                  extracted information, including causal maps, plots of causal\n                  distributions, and statement graphs.\n                </li>\n                <li>\n                  A reporting tool that fosters reproducibility of the research\n                  by keeping track of the activated components and their\n                  settings.\n                </li>\n              </ul>\n              <p>\n                Users interested in contributing their own components or\n                exploring the possibilities of existing components in the\n                Penelope ecosystem can refer to the Penelope community page for\n                the latest news and updates on the project.\n              </p>\n            </Element>\n            <Element name=\"section2\" style={{ minHeight: \"500px\" }}>\n              <h1 className=\"display-3\">Observatory </h1>\n              <p style={{ minHeight: \"150px\" }}>\n                The Penelope climate change opinion observatory provides access\n                to data analytics components that are part of the Penelope\n                ecosystem of tools for computational social science. These\n                components are web services that are hosted somewhere on the\n                internet and that can be chained together into pipelines. Full\n                documentation on the available components and interfaces can be\n                found on the Penelope community website.\n              </p>\n\n              <Element name=\"section2_1\" style={{ minHeight: \"300px\" }}>\n                <h1 className=\"display-4\">Pipeline </h1>\n\n                <Row>\n                  <Col>\n                    <p>\n                      The pipeline section of the interface consists of a series\n                      of connected blocks that represent ensuing steps in a data\n                      analytics pipeline. The user can specify the analysis that\n                      is carried out in each step, starting from data selection.\n                      Interactive buttons inside of the blocks show which\n                      analyses are available. The available analyses are\n                      determined on the basis of the analyses conducted in the\n                      previous step. When an analysis button is clicked, a\n                      prompt is shown which allows the user to set specific\n                      parameters for the analyses.\n                    </p>\n                  </Col>\n                  <Col>\n                    <div>\n                      <svg height=\"200\" width=\"400\">\n                        <defs>\n                          <mask id=\"mask3\" x=\"0\" y=\"0\" width=\"100\" height=\"100\">\n                            <rect\n                              x=\"0\"\n                              y=\"0\"\n                              width=\"500\"\n                              height=\"250\"\n                              style={{ stroke: \"none\", fill: \"#222222\" }}\n                            />\n                            {/* <polygon\n                              points=\"100,100 250,250 500,210\"\n                              style={{ stroke: \"none\", fill: \"#ffffff\" }}\n                            /> */}\n                            <rect\n                              x=\"0\"\n                              y=\"20\"\n                              width=\"500\"\n                              height=\"75\"\n                              style={{ stroke: \"none\", fill: \"#ffffff\" }}\n                            />\n                          </mask>\n                        </defs>\n\n                        <image\n                          x=\"0\"\n                          y=\"0\"\n                          width=\"400\"\n                          height=\"200\"\n                          href={ScreenshotObservatory}\n                          style={{\n                            stroke: \"none\",\n                            fill: \"#0000ff\",\n                            mask: \"url(#mask3)\",\n                          }}\n                          // filter=\"url(#invert)\"\n                        />\n                      </svg>\n                    </div>\n                  </Col>\n                </Row>\n              </Element>\n              <Element name=\"section2_2\" style={{ minHeight: \"500px\" }}>\n                <h1 className=\"display-4\">Dashboard </h1>\n                <Row>\n                  <Col>\n                    <p>\n                      The dashboard is shown underneath the pipeline. It\n                      consists of a series of modular windows that display the\n                      outcomes of the analyses. Depending on the type of\n                      analysis, further interactivity is possible.\n                    </p>\n                  </Col>\n                  <Col>\n                    <svg height=\"200\" width=\"400\">\n                      <defs>\n                        <mask id=\"mask4\" x=\"0\" y=\"0\" width=\"100\" height=\"100\">\n                          <rect\n                            x=\"0\"\n                            y=\"0\"\n                            width=\"400\"\n                            height=\"200\"\n                            style={{ stroke: \"none\", fill: \"#222222\" }}\n                          />\n                          <rect\n                            x=\"0\"\n                            y=\"95\"\n                            width=\"400\"\n                            height=\"200\"\n                            style={{ stroke: \"none\", fill: \"#ffffff\" }}\n                          />\n                        </mask>\n                      </defs>\n\n                      <image\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"400\"\n                        height=\"200\"\n                        href={ScreenshotObservatory}\n                        style={{\n                          stroke: \"none\",\n                          fill: \"#0000ff\",\n                          mask: \"url(#mask4)\",\n                        }}\n                        // filter=\"url(#invert)\"\n                      />\n                    </svg>\n                  </Col>\n                </Row>\n              </Element>\n            </Element>\n\n            <Element name=\"section3\">\n              <h1 className=\"display-3\" style={{ minHeight: \"200px\" }}>\n                Methods &amp; Components\n              </h1>\n              <Element name=\"section3_1\" style={{ minHeight: \"1000px\" }}>\n                <h2 className=\"display-4\">Adding datasets</h2>\n                <p>\n                  The first step in the pipeline consists of choosing the right\n                  dataset for your analysis. The observatory platform is made up\n                  of different components communicating with each other in order\n                  to complete the different steps in the pipeline. These\n                  components are hosted by various volunteers and stakeholders.\n                  The observatory website shows which databases and data sources\n                  are already integrated, the list is however not exhaustive and\n                  more can be added in the future because of the modular nature\n                  of independent components.\n                </p>\n                <p>\n                  When choosing a dataset, a search term with a keyword must be\n                  provided in order to filter the retrieved comments, texts or\n                  articles containing this keyword. A maximum number of articles\n                  must be provided to limit your search query and the dates in\n                  between which the texts are posted online.\n                </p>\n\n                <Row>\n                  <Col>\n                    <img\n                      src={addDatasetPicture}\n                      width=\"500\"\n                      alt=\"Adding Dataset(s)\"\n                    />\n                  </Col>\n                </Row>\n              </Element>\n              <Element name=\"section3_1\" style={{ minHeight: \"1000px\" }}>\n                <h2 className=\"display-4\">Named Entity Extraction</h2>\n                <p>\n                  This component features the spaCy Named Entity Recognition. A\n                  statistical entity recognition system, that assigns labels to\n                  words. The model identifies a variety of named and numeric\n                  entities, including companies, locations, organizations and\n                  products.{\" \"}\n                  <a\n                    href=\"https://app.swaggerhub.com/apis/EHAI/vub-spacy-services/1.0.0#/penelope/nounNamedEntitiesText\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    OpenAPI Specification\n                  </a>\n                </p>\n                <Row>\n                  <Col>\n                    <h2>Try the interface:</h2>\n                    <img\n                      src={GifNamedentities}\n                      width=\"100%\"\n                      alt=\"Named Entities\"\n                    />\n                    {/* </Col>\n                  <Col> */}\n                    <h2>Add it to your pipeline:</h2>\n                    <pre>{`\n# Import this package\nimport requests\n\ndata = {\n  \"sentence\": \"Would you like to use Penelope?\",\n  \"model\": \"en\"\n}\nresponse = requests.post(\n  \"https://penelope.vub.be/spacy-api/tokenize\", \n  json=data)\nresponse.json()\n\n            `}</pre>\n                    <p>\n                      <a\n                        href=\"https://penelope.vub.be/getting-started/\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        More information on using components in your code or\n                        pipeline\n                      </a>\n                    </p>\n                  </Col>\n                </Row>\n              </Element>\n\n              <Element name=\"section3_2\" style={{ minHeight: \"1000px\" }}>\n                <h2 className=\"display-4\">Causal Relation Extraction</h2>\n                <p>\n                  <a\n                    href=\"https://framenet.icsi.berkeley.edu/fndrupal/frameIndex\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    Frame\n                  </a>{\" \"}\n                  semantics is commonly used as a methodology for representing\n                  the meaning of linguistic utterances. While semantic frames\n                  have successfully been formalised on a large scale, it is\n                  still a major challenge to automatically extract them from raw\n                  text. This Penelope component overcomes this challenge by\n                  using precision language processing techniques. Concretely,\n                  the component takes a sentence (or a list of texts) and a\n                  frame of interest (e.g. ‘Causation’) as input and returns all\n                  instances of this frame, and its frame elements, that occur in\n                  the sentence (or list of texts). The language processing part\n                  of the semantic frame extractor has been developed within the{\" \"}\n                  <a href=\"https://www.fcg-net.org/\">\n                    Fluid Construction Grammar (FCG)\n                  </a>{\" \"}\n                  framework.{\" \"}\n                  <a\n                    href=\"https://app.swaggerhub.com/apis/EHAI/Semantic-Frame-Extractor-API/1.0.0\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    OpenAPI specification\n                  </a>\n                </p>\n\n                <Row>\n                  <Col>\n                    <h2>Try the interface:</h2>\n                    <img\n                      src={GifCausalframes}\n                      width=\"100%\"\n                      alt=\"Causal Frames\"\n                    />\n                    {/* </Col>\n                  <Col> */}\n                    <h2>Add it to your pipeline:</h2>\n                    <pre>{`\n# Import this package\nimport requests\n\njson_data = {\n  \"utterance\": \"This causes that.\",\n  \"frames\": [\n    \"Causation\"\n  ]\n}\nurl = 'https://penelope.vub.be/semantic-frame-extractor/extract-frames'\nresponse = requests.post(url,\n            json=json_data)\nresponse.json()\n\n            `}</pre>\n                    <p>\n                      <a\n                        href=\"https://penelope.vub.be/getting-started/\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        More information on using components in your code or\n                        pipeline\n                      </a>\n                    </p>\n                  </Col>\n                </Row>\n              </Element>\n              <Element name=\"section3_3\" style={{ minHeight: \"1000px\" }}>\n                <h2 className=\"display-4\">Statement Graph</h2>\n                <p>\n                  A statement network graph is a graph in which each sentence is\n                  represented by a node. Two nodes (sentences) are connected if\n                  they share atleast one word(lemma). This component create a\n                  co-occurence graph from a list of statements (optional with\n                  metadata). Sentences with similar words thus having more\n                  connections will be pulled together via a Force-Directed\n                  Layout. For more information see{\" \"}\n                  <a href=\"https://github.com/pournaki/penelope-pipelines/blob/master/pipelines.ipynb\">\n                    this notebook\n                  </a>\n                  .\n                </p>\n                <Row>\n                  <Col>\n                    <h2>Try our interface:</h2>\n                    <img\n                      src={GifStatementGraph}\n                      width=\"100%\"\n                      alt=\"Statement graph\"\n                    />\n                    {/* </Col>\n                  <Col> */}\n                    <h2>Add it to your pipeline:</h2>\n                    <pre>{`\n# Import this package\nimport requests\n\njsondata = {\n    \"data\": [{'text':'This is a sentence.', \n              'metadatafield1': 'a'},\n             {'text':'This is another sentence', \n              'metadatafield1':'a'}],\n    \"language\": \"en\",\n    \"relevant_pos\": ['ADJ', 'VERB', 'NOUN'],\n    \"ignore\": []\n}\nurl = 'https://penelope.vub.be/network-components/statementgraphgenerator'\nresponse = requests.post(url, json=jsondata)\nprint(response.json())\n            `}</pre>\n                    <p>\n                      <a\n                        href=\"https://penelope.vub.be/getting-started/\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        More information on using components in your code or\n                        pipeline\n                      </a>\n                    </p>\n                  </Col>\n                </Row>\n              </Element>\n\n              <Element name=\"section3_4\" style={{ minHeight: \"1000px\" }}>\n                <h2 className=\"display-4\">Term frequency</h2>\n                <p>\n                  This component counts the words in the dataset. This is done\n                  by first tokenizing the text and then counting the words.\n                </p>\n                <Row>\n                  <Col>\n                    <h2>Try our interface:</h2>\n                    <img src={GifTermFreq} width=\"700\" alt=\"Term frequency\" />\n                    {/* </Col>\n                  <Col> */}\n                    <h2>Add it to your pipeline:</h2>\n                    <pre>{`\n# Import these packages\nimport requests\nimport collections\n\njsondata = {\n    \"sentence\": \"Count all the words in this sentence.\",\n    \"model\": \"en\"\n}\n\nresponse     = requests.post(\"https://penelope.vub.be/spacy-api/tokenize\", \n                             json=jsondata)\ntokens       = response.json()[\"tokens\"]\ntoken_counts = Counter(tokens)\n            `}</pre>\n                    <p>\n                      <a\n                        href=\"https://penelope.vub.be/getting-started/\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        More information on using components in your code or\n                        pipeline\n                      </a>\n                    </p>\n                  </Col>\n                </Row>\n              </Element>\n\n              <Element name=\"section3_5\" style={{ minHeight: \"1000px\" }}>\n                <h2 className=\"display-4\">Word Tree</h2>\n                <p>\n                  A word tree depicts multiple parallel sequences of words. It\n                  could be used to show which words most often follow or precede\n                  a target word (e.g., \"Cats are...\") or to show a hierarchy of\n                  terms (e.g., a decision tree). Suppose you've collected a set\n                  of phrases about cats (e.g., \"cats eat mice\", \"cats are better\n                  than kittens\") and you want to highlight the most important\n                  attributes from the set.\n                </p>\n                <Row>\n                  <Col>\n                    <h2>Try the interface:</h2>\n                    <img src={GifWordTree} width=\"100%\" alt=\"Word tree\" />\n                    <h2>Add it to your pipeline:</h2>{\" \"}\n                    <a href=\"https://developers.google.com/chart/interactive/docs/gallery/wordtree\">\n                      Click here for more information about google charts word\n                      tree.\n                    </a>\n                    <p>\n                      <a\n                        href=\"https://penelope.vub.be/getting-started/\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        More information on using components in your code or\n                        pipeline\n                      </a>\n                    </p>\n                  </Col>\n                </Row>\n              </Element>\n              <Element name=\"section3_6\" style={{ minHeight: \"700px\" }}>\n                <h2 className=\"display-4\">Plot counts</h2>\n                <p>\n                  This visualization plots a stacked line chart of a given\n                  dataset. This component can be used after counting the number\n                  of articles, the word frequencies or named entities.\n                </p>\n                <Row>\n                  <Col>\n                    <h2>Try our interface:</h2>\n                    <img\n                      src={GifPlotCounts}\n                      width=\"100%\"\n                      alt=\"Plotting counts\"\n                    />\n                    {/* </Col>\n                  <Col> */}\n                    <h2>Add it to your pipeline:</h2>{\" \"}\n                    <p>\n                      <a\n                        href=\"https://penelope.vub.be/getting-started/\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        More information on using components in your code or\n                        pipeline\n                      </a>\n                    </p>\n                  </Col>\n                </Row>\n              </Element>\n              <Element name=\"section3_7\" style={{ minHeight: \"1000px\" }}>\n                <h2 className=\"display-4\">Causal Map</h2>\n                <p>\n                  This graph visualisation is a dependency graph between causes\n                  and effects. Causes or effects that share another cause or\n                  effect are chained together in the graph.\n                </p>\n                <Row>\n                  <Col>\n                    <h2>Try the interface:</h2>\n                    <img src={GifCausalMap} width=\"100%\" alt=\"Causal Map\" />\n                    {/* </Col>\n                  <Col> */}\n                    <h2>Try it yourself:</h2>{\" \"}\n                    <p>component in API form coming soon.</p>\n                    <p>\n                      <a\n                        href=\"https://penelope.vub.be/getting-started/\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        More information on using components in your code or\n                        pipeline\n                      </a>\n                    </p>\n                  </Col>\n                </Row>\n              </Element>\n              <Element name=\"section3_8\" style={{ minHeight: \"1000px\" }}>\n                <h2 className=\"display-4\">Causes distributions</h2>\n                <p>\n                  This component is available in the pipeline after extracting\n                  all causes and effects from the dataset. With this component\n                  we create a barchart plot that displays the frequency of found\n                  causes and effects in the text. The cause-and-effect\n                  sentencess are summed together depending on a\n                  sentence-similarity measure.\n                </p>\n                <Row>\n                  <Col>\n                    <h2>Try the interface:</h2>\n                    <img\n                      src={GifFrameDistribution}\n                      width=\"100%\"\n                      alt=\"Pipeline\"\n                    />\n                    {/* </Col>\n                  <Col> */}\n                    <p>Try it yourself:</p>\n                    <p>\n                      <a\n                        href=\"https://penelope.vub.be/getting-started/\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        More information on using components in your code or\n                        pipeline\n                      </a>\n                    </p>\n                  </Col>\n                </Row>\n              </Element>\n              <Element name=\"section3_9\" style={{ minHeight: \"1000px\" }}>\n                <h2 className=\"display-4\">Statement distributions</h2>\n                <p>\n                  This component is available in the pipeline after creating a\n                  statement graph and plots the aggregated statements with their\n                  sum and plots a barchart\n                </p>\n                <Row>\n                  <Col>\n                    <h2>Try our interface:</h2>\n                    <img\n                      src={GifStatementDistribution}\n                      width=\"100%\"\n                      alt=\"Pipeline\"\n                    />\n                    {/* </Col>\n                  <Col> */}\n                    <p>Try it yourself:</p>\n                    <p>\n                      <a\n                        href=\"https://penelope.vub.be/getting-started/\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        More information on using components in your code or\n                        pipeline\n                      </a>\n                    </p>\n                  </Col>\n                </Row>\n              </Element>\n            </Element>\n\n            <Element name=\"section4\">\n              <h1 className=\"display-3\">Example pipeline </h1>\n              <p className=\"mb-4\">\n                This section offers a step-by-step example of how the Penelope\n                climate change opinion observatory can be used.\n              </p>\n              <Col>\n                <Row className=\"mt-4\">\n                  <h3>Step 1</h3>\n                </Row>\n                <Row>\n                  <svg height=\"500\" width=\"1000\">\n                    <defs>\n                      <mask\n                        id=\"maskexample0\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"100\"\n                        height=\"100\"\n                      >\n                        <rect\n                          x=\"0\"\n                          y=\"0\"\n                          width=\"1000\"\n                          height=\"500\"\n                          style={{ stroke: \"none\", fill: \"#222222\" }}\n                        />\n\n                        <rect\n                          x=\"0\"\n                          y=\"0\"\n                          width=\"1000\"\n                          height=\"500\"\n                          style={{ stroke: \"none\", fill: \"#ffffff\" }}\n                        />\n                        <rect\n                          x=\"10\"\n                          y=\"90\"\n                          width=\"100\"\n                          height=\"50\"\n                          style={{ stroke: \"none\", fill: \"#888888\" }}\n                        />\n                      </mask>\n                    </defs>\n                    <image\n                      x=\"0\"\n                      y=\"0\"\n                      width=\"900\"\n                      height=\"500\"\n                      href={Example1}\n                      style={{\n                        stroke: \"none\",\n                        fill: \"#0000ff\",\n                        mask: \"url(#maskexample0)\",\n                      }}\n                      // filter=\"url(#invert)\"\n                    />\n                  </svg>\n                </Row>\n                <Row>\n                  <p>\n                    Select one or two datasets to compare as a first step in the\n                    pipeline\n                  </p>\n                </Row>\n                <Row className=\"mt-4\">\n                  <h3>Step 2</h3>\n                </Row>\n                <Row>\n                  <svg height=\"500\" width=\"1000\">\n                    <defs>\n                      <mask\n                        id=\"maskexample1\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"100\"\n                        height=\"100\"\n                      >\n                        <rect\n                          x=\"0\"\n                          y=\"0\"\n                          width=\"1000\"\n                          height=\"500\"\n                          style={{ stroke: \"none\", fill: \"#444444\" }}\n                        />\n                        <rect\n                          x=\"190\"\n                          y=\"80\"\n                          width=\"120\"\n                          height=\"200\"\n                          style={{ stroke: \"none\", fill: \"#ffffff\" }}\n                        />\n                        <rect\n                          x=\"280\"\n                          y=\"130\"\n                          width=\"160\"\n                          height=\"40\"\n                          style={{ stroke: \"none\", fill: \"#ffffff\" }}\n                        />\n                      </mask>\n                    </defs>\n\n                    <image\n                      x=\"0\"\n                      y=\"0\"\n                      width=\"900\"\n                      height=\"500\"\n                      href={Example2}\n                      style={{\n                        stroke: \"none\",\n                        fill: \"#0000ff\",\n                        mask: \"url(#maskexample1)\",\n                      }}\n                      // filter=\"url(#invert)\"\n                    />\n                  </svg>\n                </Row>\n                <Row>\n                  <p>\n                    Select the analysis you would like to apply on the textual\n                    data.\n                  </p>\n                </Row>\n                <Row className=\"mt-4\">\n                  <h3>Step 3</h3>\n                </Row>\n                <Row>\n                  <svg height=\"500\" width=\"1000\">\n                    <defs>\n                      <mask\n                        id=\"maskexample2\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"100\"\n                        height=\"100\"\n                      >\n                        <rect\n                          x=\"0\"\n                          y=\"0\"\n                          width=\"1000\"\n                          height=\"500\"\n                          style={{ stroke: \"none\", fill: \"#666666\" }}\n                        />\n                        <rect\n                          x=\"395\"\n                          y=\"80\"\n                          width=\"115\"\n                          height=\"200\"\n                          style={{ stroke: \"none\", fill: \"#ffffff\" }}\n                        />\n                        <rect\n                          x=\"484\"\n                          y=\"128\"\n                          width=\"200\"\n                          height=\"55\"\n                          style={{ stroke: \"none\", fill: \"#ffffff\" }}\n                        />\n                      </mask>\n                    </defs>\n\n                    <image\n                      x=\"0\"\n                      y=\"0\"\n                      width=\"900\"\n                      height=\"500\"\n                      href={Example3}\n                      style={{\n                        stroke: \"none\",\n                        fill: \"#0000ff\",\n                        mask: \"url(#maskexample2)\",\n                      }}\n                      // filter=\"url(#invert)\"\n                    />\n                  </svg>\n                </Row>\n                <Row>\n                  <p>\n                    After the first analysis the next available methods become\n                    available depending on the first result. Create a statement\n                    graph from ordinary text in the first step, or create a\n                    statement graph based only on the extracted causes or\n                    effects\n                  </p>\n                </Row>\n                <Row className=\"mt-4\">\n                  <h3>Step 4</h3>\n                </Row>\n                <Row>\n                  <svg height=\"500\" width=\"800\">\n                    <defs>\n                      <mask\n                        id=\"maskexample4\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"100\"\n                        height=\"100\"\n                      >\n                        <rect\n                          x=\"0\"\n                          y=\"0\"\n                          width=\"1000\"\n                          height=\"500\"\n                          style={{ stroke: \"none\", fill: \"#222222\" }}\n                        />\n\n                        <rect\n                          x=\"0\"\n                          y=\"238\"\n                          width=\"1000\"\n                          height=\"500\"\n                          style={{ stroke: \"none\", fill: \"#ffffff\" }}\n                        />\n                      </mask>\n                    </defs>\n\n                    <image\n                      x=\"0\"\n                      y=\"0\"\n                      width=\"900\"\n                      height=\"500\"\n                      href={Example4}\n                      style={{\n                        stroke: \"none\",\n                        fill: \"#0000ff\",\n                        mask: \"url(#maskexample4)\",\n                      }}\n                      // filter=\"url(#invert)\"\n                    />\n                  </svg>\n                </Row>\n                <Row>\n                  <p>Compare the results of the analysis in the dashboard.</p>\n                </Row>\n                <Row style={{ minHeight: \"200px\" }}>\n                  <LinkRouter\n                    to=\"/observatory\"\n                    onClick={this.props.examplePipeline}\n                  >\n                    <Button color=\"danger\">Constructed pipeline example</Button>\n                  </LinkRouter>\n                </Row>\n              </Col>\n            </Element>\n\n            <Element name=\"section5\" style={{ minHeight: \"1000px\" }}>\n              <h1 className=\"display-4\">Acknowledgement and funding </h1>\n              <p>\n                This application has been developed by the Evolutionary and\n                Hybrid AI team at VUB for the ODYCCEUS project founded by the\n                H2020 FETPROACT program of the European Commission. It is hosted\n                by the AI lab Brussels.\n              </p>\n            </Element>\n          </Col>\n          <Col xs=\"0\" sm=\"1\" lg=\"1\"></Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Turorial;\n","import React from \"react\";\nimport MyNavbar from \"./navbar.js\";\nimport Pipeline from \"./pipeline.js\";\nimport Dashboard from \"./dashboard.js\";\nimport Home from \"./home.js\";\nimport About from \"./about.js\";\nimport Tutorial from \"./tutorial.js\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport getURL, {\n  BASE_URL,\n  HEADERS,\n  createTableName,\n  countArticles,\n  countWords,\n} from \"./utilities.js\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      steps: [],\n      prettySteps: [],\n      datasets: [],\n      loading: false,\n    };\n    this.updateState = this.updateState.bind(this);\n    this.removeAllKeysExcept = this.removeAllKeysExcept.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.examplePipeline = this.examplePipeline.bind(this);\n    this.handleStatementText = this.handleStatementText.bind(this);\n    this.handleStatementFrame = this.handleStatementFrame.bind(this);\n    this.handleFinal = this.handleFinal.bind(this);\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handlePlot = this.handlePlot.bind(this);\n    this.handleWordCounts = this.handleWordCounts.bind(this);\n    this.handleArticleCounts = this.handleArticleCounts.bind(this);\n    this.handleFetch = this.handleFetch.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handlePlotCauses = this.handlePlotCauses.bind(this);\n    this.handleDistribution = this.handleDistribution.bind(this);\n    this.handlePlotCausalMap = this.handlePlotCausalMap.bind(this);\n  }\n\n  removeAllKeysExcept(json, keys) {\n    keys.push(\"data\", \"term\", \"name\", \"number\", \"start\", \"stop\");\n    let result = {};\n    Object.keys(json).forEach((key) => {\n      if (keys.includes(key)) result[key] = json[key];\n    });\n    return result;\n  }\n\n  updateState(step, name, slot, keysToKeep, keyToSet, optionalFunc) {\n    this.setState((prevState) => ({\n      steps: [...prevState.steps.splice(0, slot - 1), step],\n      prettySteps: [...prevState.prettySteps.splice(0, slot - 1), name],\n      datasets: [\n        ...prevState.datasets.map((dataset) => {\n          dataset = this.removeAllKeysExcept(dataset, keysToKeep);\n          dataset[keyToSet] = true;\n          if (optionalFunc) dataset = optionalFunc(dataset);\n          return dataset;\n        }),\n      ],\n      loading: false,\n    }));\n  }\n\n  handleError(error) {\n    alert(\"Server error, please try again later.\");\n    this.setState((prevState) => ({\n      datasets: prevState.datasets.map((d) => this.removeAllKeysExcept(d, [])),\n      loading: false,\n    }));\n  }\n\n  handleAdd(source, term, start, stop, number, comments, subreddit) {\n    this.setState({ steps: [], loading: true });\n    const name = createTableName(\n      source,\n      comments,\n      subreddit,\n      term,\n      start,\n      stop,\n      number\n    );\n\n    if (this.state.datasets.some((e) => e.name === name)) return;\n\n    let url = getURL(source, term, start, stop, number, comments, subreddit);\n    fetch(url, {\n      method: \"GET\",\n    })\n      .then((data) => data.json())\n      .then((data) => {\n        if (data.length === 0) return;\n        this.setState((previousState) => ({\n          datasets: [\n            ...previousState.datasets.map((d) =>\n              this.removeAllKeysExcept(d, [])\n            ),\n            {\n              name: createTableName(\n                source,\n                comments,\n                subreddit,\n                term,\n                start,\n                stop,\n                data.length\n              ),\n              term: term,\n              start: start,\n              stop: stop,\n              number: data.length,\n              data: data,\n            },\n          ],\n          loading: false,\n        }));\n      })\n      .catch((e) => {\n        this.handleError(e);\n      });\n  }\n\n  handleFinal(step, name, slot) {\n    this.setState((prevState) => ({\n      steps: [...prevState.steps.splice(0, slot - 1), step],\n      prettySteps: [...prevState.prettySteps.splice(0, slot - 1), name],\n    }));\n  }\n\n  handleDelete(toDelete) {\n    const keep = this.state.datasets.filter((set) => set.name !== toDelete);\n    const result = keep.map((d) => this.removeAllKeysExcept(d, []));\n    this.setState({ steps: [], datasets: result });\n  }\n\n  handlePlot(step, name, slot) {\n    \"Plot the Entities counts over time\";\n    this.updateState(\n      step,\n      name,\n      slot,\n      [\"entities\", \"articleCounts\", \"wordCounts\"],\n      [\"showEntitiesPlot\"]\n    );\n  }\n\n  handleArticleCounts(step, name, slot) {\n    this.updateState(step, name, slot, [], [], countArticles);\n  }\n\n  handleWordCounts(step, name, slot) {\n    this.updateState(step, name, slot, [], [], countWords);\n  }\n\n  handleDistribution(step, name, slot) {\n    \"Plot the distribution of nodes of a graph\";\n    this.updateState(\n      step,\n      name,\n      slot,\n      [\"showGraphText\", \"showGraphFrame\"],\n      [\"showNodeDistribution\"]\n    );\n  }\n\n  handlePlotCauses(step, name, slot) {\n    \"Plot the causes and effects per comment after CFE\";\n    this.updateState(step, name, slot, [], [\"showCausesPlot\"]);\n  }\n\n  handlePlotCausalMap(step, name, slot) {\n    \"Plot causal Map after CFE\";\n    this.updateState(step, name, slot, [], [\"showCausalMap\"]);\n  }\n\n  handleStatementText(step, name, slot) {\n    \"Plot Statement Graph\";\n    this.updateState(step, name, slot, [], [\"showGraphText\"]);\n  }\n\n  handleStatementFrame(step, name, slot) {\n    \"Plot Statement Graph\";\n    this.updateState(step, name, slot, [], [\"showGraphFrame\"]);\n  }\n\n  handleFetch(route, stateField, func, step, name, slot) {\n    this.setState({ loading: true });\n    const url = BASE_URL + route;\n    let dataArray = this.state.datasets.map((d) => d.data);\n    const fetches = dataArray.map((data) =>\n      fetch(url, {\n        method: \"POST\",\n        headers: HEADERS,\n        body: JSON.stringify(data),\n      })\n    );\n    Promise.all(fetches)\n      .then((responses) => Promise.all(responses.map((r) => r.json())))\n      .then((jsonObjects) => {\n        this.setState((prevState) => ({\n          steps: [...prevState.steps.splice(0, slot - 1), step],\n          prettySteps: [...prevState.prettySteps.splice(0, slot - 1), name],\n          datasets: [\n            ...prevState.datasets.map((dataset, i) => {\n              dataset = this.removeAllKeysExcept(dataset, []);\n              let temp = func(dataset, jsonObjects, stateField, i);\n              return temp;\n            }),\n          ],\n          loading: false,\n        }));\n      })\n      .catch((error) => {\n        this.handleError(error);\n      });\n  }\n\n  examplePipeline() {\n    this.setState({ steps: [], datasets: [], loading: true });\n    fetch(BASE_URL + \"example\", {\n      method: \"GET\",\n      headers: HEADERS,\n    })\n      .then((data) => data.json())\n      .then((data) => this.setState(data))\n      .catch((error) => this.handleError(error));\n  }\n\n  render() {\n    return (\n      <>\n        <Router basename={\"/observatories/climate-change-opinion-observatory\"}>\n          <MyNavbar examplePipeline={this.examplePipeline} />\n          <Switch>\n            <Route path=\"/observatory\">\n              <Container fluid={true}>\n                <Row>\n                  <Col>\n                    <h1 className=\"mt-4 mb-4\">Pipeline</h1>\n                  </Col>\n                  <Col></Col>\n                </Row>\n                <Pipeline\n                  steps={this.state.steps}\n                  prettySteps={this.state.prettySteps}\n                  isLoading={this.state.loading}\n                  onFetch={this.handleFetch}\n                  labels={this.state.datasets.map((x) => x.name)}\n                  onAdd={this.handleAdd}\n                  onWordCount={this.handleWordCounts}\n                  onArticleCounts={this.handleArticleCounts}\n                  onDelete={this.handleDelete}\n                  onStatementText={this.handleStatementText}\n                  onStatementFrame={this.handleStatementFrame}\n                  onPlot={this.handlePlot}\n                  onPlotCauses={this.handlePlotCauses}\n                  onDistribution={this.handleDistribution}\n                  onPlotCausalMap={this.handlePlotCausalMap}\n                  onFinal={this.handleFinal}\n                />\n                <h1 className=\"mt-4 mb-4\">Dashboard</h1>\n                <Dashboard\n                  isLoading={this.state.loading}\n                  datasets={this.state.datasets}\n                />\n                {/*JSON.stringify(this.state)*/}\n              </Container>\n            </Route>\n            <Route path=\"/about\">\n              <About />\n            </Route>\n            <Route path=\"/tutorial\">\n              <Tutorial examplePipeline={this.examplePipeline} />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </Router>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./app.js\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/screenshotObservatory.1f2ff1e9.png\";"],"sourceRoot":""}