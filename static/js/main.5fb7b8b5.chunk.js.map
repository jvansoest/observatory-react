{"version":3,"sources":["logosmall.svg","logo.svg","navbar.js","datasetlabel.js","datasetLabelBox.js","modal.js","pipelinecard.js","progressbar.js","resultsteps.js","steps.js","pipeline.js","wordtree.js","dashboardcard.js","graph.js","jsoncard.js","linechart.js","dashboard.js","home.js","about.js","createURLquery.js","app.js","warning.js","webpack:///./src/index.js?b635"],"names":["module","exports","MyNavbar","props","Navbar","color","dark","expand","className","to","src","logoSmall","alt","Nav","navbar","NavItem","NavbarText","DataLabel","handleDelete","bind","this","onDelete","text","Badge","aria-label","type","onClick","aria-hidden","React","Component","DatasetLabelBox","Col","labels","map","el","Row","key","ModalExample","state","isModalOpen","term","number","start","stop","source","toggle","handleChange","publish","onAdd","setState","target","name","value","Button","size","disabled","block","buttonLabel","Modal","isOpen","ModalHeader","ModalBody","form","md","FormGroup","Label","for","Input","id","onChange","placeholder","ModalFooter","PipelineCard","Card","CardBody","CardTitle","title","body","StepProgressBar","style","marginTop","marginLeft","marginRight","percent","filledBackground","ResultSteps","pipeline","item","Steps","handlePlot","handleFinal","handleCause","handleEntities","handleWordTree","handleStatement","handlePlotGraph","handleClickButton5","handleClickButton6","onWordTree","onStatement","onEntities","console","log","onCause","onPlotGraph","onPlot","onTextFunction5","onTextFunction6","alert","buttons","numerical","graph","visual","final","xs","steps","length","Pipeline","height","onFinish","WordTreeRow","datasets","dataset","field","data","focusWord","WordTree","sm","loader","chartType","options","wordtree","format","word","rootProps","ExportCSVButton","CSVExport","SearchBar","Search","DashboardCard","columns","dataField","formatter","cell","row","overflow","CardText","keyField","search","exportCSV","searchProps","csvProps","baseProps","pagination","paginationFactory","Graph","monitorHeight","graphData","nodeLabel","width","JsonCard","JSON","stringify","LineChart","setHoverData","e","hoverData","category","updateInput","evt","inputValue","itemsToPlot","filter","toLowerCase","includes","prevState","chartOptions","series","chart","xAxis","maxPadding","crosshair","categories","plotOptions","area","stacking","lineColor","lineWidth","marker","minLength","debounceTimeout","highcharts","Highcharts","Dashboard","isLoading","Spinner","plot","cause","Home","Container","mySvg","About","BASE_URL","HEADERS","Accept","App","loading","errorMessage","handleAdd","handleGraph","handleFinish","handleFunction5","handleFunction6","some","url","params","URLSearchParams","guardian","parlgbr","parlger","twitter","reddit","toString","getURL","fetch","method","then","json","previousState","statements","tree","entities","toDelete","set","newDatasets","dataArr","fetches","headers","Promise","all","responses","r","jsonObjects","i","catch","error","basename","path","fluid","x","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5fb7b8b5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logosmall.4a6f6104.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.a5e39838.svg\";","import React from \"react\";\nimport { Navbar, Nav, NavItem, NavbarText } from \"reactstrap\";\nimport logoSmall from \"./logosmall.svg\";\nimport { Link } from \"react-router-dom\";\n\nconst MyNavbar = props => {\n  return (\n    <Navbar color=\"danger\" dark expand=\"md\">\n      <Link className=\"nav-link\" to=\"/\">\n        <img src={logoSmall} alt=\"Odyceus\" />\n      </Link>\n      <Nav className=\"mr-auto\" navbar>\n        <NavItem>\n          <Link className=\"nav-link\" to=\"/\">\n            Home\n          </Link>\n        </NavItem>\n        <NavItem>\n          <Link className=\"nav-link\" to=\"/observatory\">\n            Observatory\n          </Link>\n        </NavItem>\n        <NavItem>\n          <Link className=\"nav-link\" to=\"/about\">\n            About\n          </Link>\n        </NavItem>\n      </Nav>\n      <NavbarText>A Penelope interface</NavbarText>\n    </Navbar>\n  );\n};\n\nexport default MyNavbar;\n","import React from \"react\";\n\nimport { Badge } from \"reactstrap\";\n\nclass DataLabel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  handleDelete() {\n    this.props.onDelete(this.props.text);\n  }\n\n  render() {\n    return (\n      <Badge color=\"danger\" className=\"h1 btn-block\">\n        {this.props.text}\n        <button\n          className=\"close\"\n          aria-label=\"Close\"\n          type=\"button\"\n          onClick={this.handleDelete}\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </Badge>\n    );\n  }\n}\n\nexport default DataLabel;\n","import React from \"react\";\n\nimport { Row, Col } from \"reactstrap\";\n\nimport DatasetLabel from \"./datasetlabel.js\";\n\nclass DatasetLabelBox extends React.Component {\n  render() {\n    return (\n      <Col>\n        {this.props.labels.map(el => (\n          <Row key={el}>\n            <DatasetLabel\n              onDelete={this.props.onDelete}\n              text={el}\n            ></DatasetLabel>\n          </Row>\n        ))}\n      </Col>\n    );\n  }\n}\n\nexport default DatasetLabelBox;\n","/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\n\nimport React from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Label,\n  Col,\n  Input,\n  Row,\n  FormGroup\n} from \"reactstrap\";\n\nclass ModalExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false,\n      term: \"floods\",\n      number: \"10\",\n      start: \"2018-1-1\",\n      stop: \"2019-1-1\",\n      source: \"guardian\"\n    };\n    this.toggle = this.toggle.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.publish = this.publish.bind(this);\n  }\n\n  publish() {\n    this.toggle();\n    this.props.onAdd(\n      this.state.source,\n      this.state.term,\n      this.state.start,\n      this.state.stop,\n      this.state.number\n    );\n  }\n\n  toggle() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  handleChange({ target }) {\n    this.setState({\n      [target.name]: target.value\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Button\n          size=\"sm\"\n          disabled={this.props.disabled}\n          className=\"mb-2\"\n          color=\"danger\"\n          onClick={this.toggle}\n          block\n        >\n          {this.props.buttonLabel}\n        </Button>\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>Add new dataset</ModalHeader>\n          <ModalBody>\n            <Row form>\n              <Col md={10}>\n                <FormGroup>\n                  <Label for=\"sourceInput\">Source</Label>\n                  <Input\n                    value={this.state.source}\n                    type=\"select\"\n                    name=\"source\"\n                    id=\"sourceInput\"\n                    onChange={this.handleChange}\n                  >\n                    <option value=\"guardian\">Guardian</option>\n                    <option value=\"twitter\">Twitter</option>\n                    <option value=\"reddit\">Reddit</option>\n                    <option value=\"parlgbr\">Parliament UK</option>\n                    <option value=\"parlger\">Parliament DE</option>\n                  </Input>\n                </FormGroup>\n              </Col>\n            </Row>\n            <Row form>\n              <Col md={10}>\n                <FormGroup>\n                  <Label for=\"termInput\">Term</Label>\n                  <Input\n                    type=\"input\"\n                    name=\"term\"\n                    id=\"termInput\"\n                    onChange={this.handleChange}\n                    placeholder={this.state.term}\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n            <Row form>\n              <Col md={10}>\n                <FormGroup>\n                  <Label for=\"numberInput\">Number</Label>\n                  <Input\n                    type=\"input\"\n                    name=\"number\"\n                    id=\"numberInput\"\n                    onChange={this.handleChange}\n                    placeholder={this.state.number}\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n            <Row form>\n              <Col md={6}>\n                <FormGroup>\n                  <Label for=\"startInput\">From</Label>\n                  <Input\n                    type=\"input\"\n                    name=\"start\"\n                    id=\"startInput\"\n                    onChange={this.handleChange}\n                    placeholder={this.state.start}\n                  />\n                </FormGroup>\n              </Col>\n              <Col md={6}>\n                <FormGroup>\n                  <Label for=\"stopInput\">To</Label>\n                  <Input\n                    type=\"input\"\n                    name=\"stop\"\n                    id=\"stopInput\"\n                    onChange={this.handleChange}\n                    placeholder={this.state.stop}\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"danger\" onClick={this.publish}>\n              Add Dataset\n            </Button>{\" \"}\n            <Button color=\"secondary\" onClick={this.toggle}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ModalExample;\n","import React from \"react\";\nimport { Card, CardBody, CardTitle } from \"reactstrap\";\n\nclass PipelineCard extends React.Component {\n  render() {\n    return (\n      <Card className=\"shadow h-100\">\n        <CardBody>\n          <CardTitle className=\"text-center\"> {this.props.title}</CardTitle>\n          {this.props.body}\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default PipelineCard;\n","import React from \"react\";\nimport { ProgressBar } from \"react-step-progress-bar\";\nimport \"react-step-progress-bar/styles.css\";\n\nclass StepProgressBar extends React.Component {\n  render() {\n    return (\n      <div\n        style={{\n          marginTop: \"100px\",\n          marginLeft: \"-28px\",\n          marginRight: \"-28px\"\n        }}\n      >\n        <ProgressBar\n          percent={!this.props.percent ? 0 : this.props.percent}\n          filledBackground=\"linear-gradient(to right, #dc3745, #d9717a)\"\n        ></ProgressBar>\n      </div>\n    );\n  }\n}\n\nexport default StepProgressBar;\n","import React from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Row\n} from \"reactstrap\";\n\nclass ResultSteps extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  publish() {\n    this.toggle();\n  }\n\n  toggle() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  handleChange({ target }) {\n    this.setState({\n      [target.name]: target.value\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Button\n          size=\"sm\"\n          disabled={this.props.disabled}\n          className=\"mb-2\"\n          color=\"danger\"\n          onClick={this.toggle}\n          block\n        >\n          Check pipeline steps\n        </Button>\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>\n            Pipeline steps overview{\" \"}\n          </ModalHeader>\n          <ModalBody>\n            <ul>\n              {this.props.pipeline.map(item => (\n                <li key={item}>{item}</li>\n              ))}\n            </ul>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={this.toggle}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\nexport default ResultSteps;\n","import React, { Fragment } from \"react\";\nimport { Col, Button } from \"reactstrap\";\nimport PipelineCard from \"./pipelinecard.js\";\nimport StepProgressBar from \"./progressbar.js\";\nimport ResultSteps from \"./resultsteps.js\";\n\n// class ButtonGroup extends React.Component {}\n\nclass Steps extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handlePlot = this.handlePlot.bind(this);\n    this.handleFinal = this.handleFinal.bind(this);\n    this.handleCause = this.handleCause.bind(this);\n    this.handleEntities = this.handleEntities.bind(this);\n    this.handleWordTree = this.handleWordTree.bind(this);\n    this.handleStatement = this.handleStatement.bind(this);\n    this.handlePlotGraph = this.handlePlotGraph.bind(this);\n    this.handleClickButton5 = this.handleClickButton5.bind(this);\n    this.handleClickButton6 = this.handleClickButton6.bind(this);\n\n    this.state = {\n      pipeline: null\n    };\n  }\n\n  handleWordTree() {\n    this.props.onWordTree();\n  }\n\n  handleStatement() {\n    this.props.onStatement();\n  }\n\n  handleEntities() {\n    this.props.onEntities();\n  }\n\n  handleCause() {\n    console.log(\"getting causes\");\n    this.props.onCause();\n  }\n\n  handlePlotGraph() {\n    this.props.onPlotGraph();\n  }\n\n  handlePlot() {\n    this.props.onPlot();\n  }\n\n  handleClickButton5() {\n    this.props.onTextFunction5();\n  }\n\n  handleClickButton6() {\n    this.props.onTextFunction6();\n  }\n\n  handleFinal() {\n    alert(\"Pipeline steps:\");\n    this.setState({ pipeline: this.props.pipeline });\n  }\n\n  render() {\n    const buttons = {\n      text: (\n        <div>\n          <Button block size=\"sm\" color=\"danger\" onClick={this.handleStatement}>\n            Statement Graph\n          </Button>\n          <Button block size=\"sm\" color=\"danger\" onClick={this.handleEntities}>\n            Named Entities\n          </Button>\n          <Button block size=\"sm\" color=\"danger\" onClick={this.handleCause}>\n            Causal Frames\n          </Button>\n          <Button block size=\"sm\" color=\"danger\" disabled={true}>\n            N-grams\n          </Button>\n          <Button block size=\"sm\" color=\"danger\" onClick={this.handleWordTree}>\n            Word tree\n          </Button>\n        </div>\n      ),\n      numerical: (\n        <div>\n          <Button block size=\"sm\" color=\"danger\" onClick={this.handlePlot}>\n            Plot counts\n          </Button>\n        </div>\n      ),\n      graph: (\n        <div>\n          <Button block size=\"sm\" color=\"danger\" onClick={this.handlePlotGraph}>\n            Plot graph\n          </Button>\n        </div>\n      ),\n      visual: (\n        <div>\n          <Button\n            block\n            size=\"sm\"\n            color=\"danger\"\n            onClick={this.handleClickButton5}\n          >\n            Plot graph\n          </Button>\n          <Button\n            block\n            size=\"sm\"\n            color=\"danger\"\n            onClick={this.handleClickButton6}\n          >\n            Plot counts\n          </Button>\n        </div>\n      ),\n      final: (\n        <div>\n          {/* <Button block size=\"sm\" color=\"danger\" onClick={this.handleFinal}>\n            Print Pipeline Steps\n          </Button> */}\n          <ResultSteps pipeline={this.props.pipeline} />\n        </div>\n      )\n    };\n\n    return (\n      <Fragment>\n        <Col xs=\"1\">\n          <StepProgressBar\n            percent={this.props.steps.length > 1 && 100}\n          ></StepProgressBar>\n        </Col>\n        <Col>\n          <PipelineCard\n            title={\"Step 1\"}\n            body={buttons[this.props.steps[0]]}\n          ></PipelineCard>\n        </Col>\n        <Col xs=\"1\">\n          <StepProgressBar\n            percent={this.props.steps.length > 2 && 100}\n          ></StepProgressBar>\n        </Col>\n        <Col>\n          <PipelineCard\n            title={\"Step 2\"}\n            body={buttons[this.props.steps[1]]}\n          ></PipelineCard>\n        </Col>\n        <Col xs=\"1\">\n          <StepProgressBar\n            percent={this.props.steps.length > 3 && 100}\n          ></StepProgressBar>\n        </Col>\n        <Col>\n          <PipelineCard\n            title={\"Step 3\"}\n            body={buttons[this.props.steps[2]]}\n          ></PipelineCard>\n        </Col>\n      </Fragment>\n    );\n  }\n}\n\nexport default Steps;\n\n// dynamically add new pipeline step cards\n// return this.props.steps.map((elem, i) => {\n//   return (\n\n//     <Fragment key={i}>\n//       <Col xs=\"1\" className=\"h-100\">\n//         <hr\n//           style={{\n//             marginTop: \"100px\",\n//             color: \"green\",\n//             backgroundColor: \"white\",\n//             height: 5\n//           }}\n//         />\n//       </Col>\n\n//       <Col>\n//         <PipelineCard\n//           title={\"Step \" + (i + 1)}\n//           body={buttons[this.props.steps[i]]}\n//         ></PipelineCard>\n//       </Col>\n//     </Fragment>\n//   );\n// });\n// }\n","import React from \"react\";\nimport { Row, Col, Card, CardBody, CardTitle } from \"reactstrap\";\nimport DatasetLabelBox from \"./datasetLabelBox.js\";\nimport Modal from \"./modal.js\";\nimport Steps from \"./steps.js\";\n\nclass Pipeline extends React.Component {\n  render() {\n    return (\n      <Row>\n        <Col>\n          <Card style={{ height: \"200px\" }} className=\"shadow\">\n            <CardBody>\n              <CardTitle> Choose dataset(s)</CardTitle>\n              <Modal\n                disabled={this.props.labels.length >= 2}\n                buttonLabel=\"Add Dataset\"\n                onAdd={this.props.onAdd}\n              />\n              <DatasetLabelBox\n                onDelete={this.props.onDelete}\n                labels={this.props.labels}\n              ></DatasetLabelBox>\n            </CardBody>\n          </Card>\n        </Col>\n\n        {/* this.props.labels.length > 0 &&  */}\n        {\n          <Steps\n            steps={this.props.steps}\n            pipeline={this.props.pipeline}\n            onStatement={this.props.onStatement}\n            onWordTree={this.props.onWordTree}\n            onCause={this.props.onCause}\n            onPlotGraph={this.props.onPlotGraph}\n            onEntities={this.props.onEntities}\n            onPlot={this.props.onPlot}\n            onFinish={this.props.onFinish}\n            onTextFunction5={this.props.onTextFunction5}\n            onTextFunction6={this.props.onTextFunction6}\n          ></Steps>\n        }\n      </Row>\n    );\n  }\n}\n\nexport default Pipeline;\n","import React from \"react\";\nimport Chart from \"react-google-charts\";\nimport { Card, Col, Row } from \"reactstrap\";\n\nclass WordTreeRow extends React.Component {\n  render() {\n    if (!this.props.datasets) return null;\n    return (\n      <Row>\n        {this.props.datasets.map(\n          dataset =>\n            dataset[this.props.field] && (\n              <WordTree\n                key={dataset.name}\n                data={dataset[this.props.field]}\n                focusWord={dataset.term}\n              />\n            )\n        )}\n      </Row>\n    );\n  }\n}\n\nclass WordTree extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      focusWord: null\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      data: this.props.data,\n      focusWord: this.props.focusWord\n    });\n  }\n\n  render() {\n    return (\n      <Col sm=\"6\">\n        <Card className=\"shadow justify-content-between\">\n          <Chart\n            loader={<div>Loading Chart</div>}\n            chartType=\"WordTree\"\n            data={this.state.data}\n            options={{\n              wordtree: {\n                format: \"implicit\",\n                word: this.state.focusWord,\n                type: \"suffix\"\n              }\n            }}\n            rootProps={{ \"data-testid\": \"1\" }}\n          />\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default WordTreeRow;\n","import React from \"react\";\nimport { Card, CardText, CardBody, CardTitle } from \"reactstrap\";\n\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, {\n  Search,\n  CSVExport\n} from \"react-bootstrap-table2-toolkit\";\n\nconst { ExportCSVButton } = CSVExport;\nconst { SearchBar } = Search;\n\nclass DashboardCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n\n  render() {\n    const columns = [\n      {\n        dataField: \"date\",\n        text: \"Article date\"\n      },\n      {\n        dataField: \"title\",\n        text: \"Title\"\n      },\n      {\n        dataField: \"text\",\n        text: \"Text\",\n        formatter: (cell, row) => {\n          return (\n            <div style={{ height: \"150px\", overflow: \"auto\" }}>{cell}</div>\n          );\n        }\n      }\n    ];\n    return (\n      <div>\n        <Card className=\"justify-content-between shadow\">\n          <CardBody>\n            <CardTitle className=\"text-center\">\n              <h3>{this.props.title}</h3>\n            </CardTitle>\n            {this.props.body}\n            <CardText></CardText>\n\n            <ToolkitProvider\n              keyField=\"id\"\n              data={this.props.data}\n              columns={columns}\n              search\n              exportCSV\n            >\n              {props => (\n                <div>\n                  <SearchBar {...props.searchProps} />\n                  <ExportCSVButton\n                    className=\"btn-danger sm\"\n                    {...props.csvProps}\n                  >\n                    Export CSV\n                  </ExportCSVButton>\n                  <BootstrapTable\n                    {...props.baseProps}\n                    pagination={paginationFactory()}\n                  />\n                </div>\n              )}\n            </ToolkitProvider>\n          </CardBody>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default DashboardCard;\n","import React from \"react\";\nimport { ForceGraph2D } from \"react-force-graph\";\nimport { SizeMe } from \"react-sizeme\";\nimport { Card, CardBody, Col, Row } from \"reactstrap\";\n\nclass Graph extends React.Component {\n  render() {\n    if (!this.props.data) return null;\n\n    return (\n      <Row>\n        {this.props.data.map(\n          dataset =>\n            dataset[this.props.field] && (\n              <Col sm=\"6\" key={dataset.name}>\n                <SizeMe monitorHeight>\n                  {({ size }) => (\n                    <Card className=\"shadow justify-content-between\">\n                      <CardBody>\n                        <ForceGraph2D\n                          graphData={dataset[this.props.field]}\n                          nodeLabel={\"text\"}\n                          width={size.width - 30}\n                          height={600}\n                        />\n                      </CardBody>\n                    </Card>\n                  )}\n                </SizeMe>\n              </Col>\n            )\n        )}\n      </Row>\n    );\n  }\n}\n\nexport default Graph;\n","import React from \"react\";\nimport { Card, CardBody, CardTitle, CardText, Row, Col } from \"reactstrap\";\n\nclass JsonCard extends React.Component {\n  render() {\n    const field = this.props.field;\n    if (!this.props.data) return null;\n\n    return (\n      <Row>\n        {this.props.data.map(\n          dataset =>\n            dataset[field] && (\n              <Col sm=\"6\" key={dataset.name}>\n                <Card className=\"shadow justify-content-between\">\n                  <CardBody>\n                    <CardTitle className=\"text-center\">\n                      <h3>{this.props.title}</h3>\n                    </CardTitle>\n                    <CardText style={{ height: \"150px\", overflow: \"auto\" }}>\n                      {JSON.stringify(dataset[field], null, 4)}\n                    </CardText>\n                  </CardBody>\n                </Card>\n              </Col>\n            )\n        )}\n      </Row>\n    );\n  }\n}\n\nexport default JsonCard;\n","import React, { Component } from \"react\";\nimport { Col, Card, Row, CardBody, Label, FormGroup } from \"reactstrap\";\n\nimport HighchartsReact from \"highcharts-react-official\";\nimport Highcharts from \"highcharts\";\nimport { DebounceInput } from \"react-debounce-input\";\n\nclass LineChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      inputValue: \"\",\n      // To avoid unnecessary update keep all options in the state.\n      chartOptions: {\n        chart: { type: \"area\" },\n        xAxis: {\n          maxPadding: 0,\n          type: \"category\",\n          crosshair: true,\n          categories: this.props.categories\n        },\n        title: { text: \"Named Entities frequencies over time\" },\n        plotOptions: {\n          area: {\n            stacking: \"normal\",\n            lineColor: \"#666666\",\n            lineWidth: 1,\n            marker: { lineWidth: 1, lineColor: \"#666666\" }\n          }\n        },\n        series: this.props.data\n      }\n    };\n  }\n\n  setHoverData = e => {\n    // The chart is not updated because `chartOptions` has not changed.\n    this.setState({ hoverData: e.target.category });\n  };\n\n  //   updateSeries = () => {\n  //     // The chart is updated only with new options.\n  //     this.setState({\n  //       chartOptions: {\n  //         series: [{ data: [Math.random() * 5, 2, 1] }]\n  //       }\n  //     });\n  //   };\n\n  updateInput = evt => {\n    this.setState({ inputValue: evt.target.value }, () => {\n      let itemsToPlot = this.props.data.filter(data =>\n        data.name.toLowerCase().includes(this.state.inputValue)\n      );\n      //   let itemsToPlot = this.props.data.filter(jsonObj => {\n      //     if (jsonObj.name.toLowerCase().includes(this.state.inputValue)) {\n      //       return jsonObj;\n      //     }\n      //   });\n      this.setState(prevState => ({\n        ...prevState,\n        chartOptions: {\n          ...prevState.chartOptions,\n          series: itemsToPlot\n        }\n      }));\n    });\n  };\n\n  render() {\n    const { chartOptions } = this.state;\n    return (\n      <Row>\n        <Col>\n          <Card className=\"shadow justify-content-between\">\n            <CardBody>\n              <Row form>\n                <Col md={2}>\n                  <FormGroup>\n                    <Label for=\"searchInput\">Search terms containing: </Label>\n                    <DebounceInput\n                      id=\"searchInput\"\n                      className=\"form-control\"\n                      value={this.state.inputValue}\n                      minLength={3}\n                      debounceTimeout={900}\n                      onChange={evt => this.updateInput(evt)}\n                    />\n                  </FormGroup>\n                </Col>\n              </Row>\n              <HighchartsReact highcharts={Highcharts} options={chartOptions} />\n              {/* <button onClick={this.updateSeries.bind(this)}>Update Series</button> */}\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default LineChart;\n","import React from \"react\";\nimport WordTreeRow from \"./wordtree.js\";\nimport DashboardCard from \"./dashboardcard.js\";\nimport { Row, Col, Spinner } from \"reactstrap\";\nimport Graph from \"./graph.js\";\nimport JsonCard from \"./jsoncard.js\";\nimport LineChart from \"./linechart.js\";\n\nclass Dashboard extends React.Component {\n  render() {\n    return (\n      <div>\n        {this.props.isLoading ? (\n          <div className=\"text-center m-10\">\n            <Spinner style={{ width: \"6rem\", height: \"6rem\" }} color=\"danger\" />\n          </div>\n        ) : (\n          <div>\n            {/* plot counts data */}\n            {this.props.datasets.length > 0 && this.props.datasets[0].plot && (\n              <LineChart\n                data={this.props.datasets[0].plot.data}\n                categories={this.props.datasets[0].plot.categories}\n              />\n            )}\n\n            {/* Entities Data */}\n            <JsonCard\n              data={this.props.datasets}\n              field={\"entities\"}\n              title={\"Entities Json Data\"}\n            />\n\n            {/* Statements graph GRAPH */}\n            <Graph\n              data={this.props.datasets}\n              field={\"graph\"}\n              title={\"Plot Graph\"}\n            />\n\n            {/* Statements graph json */}\n            <JsonCard\n              data={this.props.datasets}\n              field={\"statements\"}\n              title={\"Graph Json Data\"}\n            />\n\n            {/* word tree */}\n            <WordTreeRow\n              datasets={this.props.datasets}\n              field={\"tree\"}\n              title={\"Word tree\"}\n            />\n          </div>\n        )}\n\n        {/* dataset */}\n        <Row>\n          {this.props.datasets.map(\n            dataset =>\n              dataset.cause && (\n                <Col sm=\"6\" key={dataset.name}>\n                  <DashboardCard\n                    key={dataset.name}\n                    title={\"Causal Frames in text\"}\n                    body={dataset.name}\n                    data={dataset.cause}\n                  ></DashboardCard>\n                </Col>\n              )\n          )}\n        </Row>\n\n        {/* dataset */}\n        <Row>\n          {this.props.datasets.map(dataset => (\n            <Col sm=\"6\" key={dataset.name}>\n              <DashboardCard\n                key={dataset.name}\n                title={\"Dataset\"}\n                body={dataset.name}\n                data={dataset.data}\n              ></DashboardCard>\n            </Col>\n          ))}\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport { Container } from \"reactstrap\";\nimport mySvg from \"./logo.svg\";\n\nfunction Home() {\n  return (\n    <Container>\n      <img src={mySvg} alt=\"Logo\" />\n\n      <h1>Welcome</h1>\n\n      <p>\n        In our present information society, on-line (social) media are important\n        sites of debate and discussion on a range of current affairs, including\n        nationality and identity, migration, and climate change. As such, these\n        (social) media platforms house a trove of relevant information for the\n        study of cultural and societal conflicts. Harvesting and analyzing this\n        digital information, however, can be challenging.\n      </p>\n\n      <p>\n        The Penelope climate change opinion observatory aims to mitigate this\n        situation by providing users with tools for studying cultural or\n        societal conflicts on climate change using (social) media data\n        automatically mined from Twitter, The Guardian and Reddit. The envisaged\n        users of this observatory include researchers, journalists, policy\n        makers and engaged citizens with varying degrees of technical\n        proficiency, ranging from novices to developers.\n      </p>\n\n      <p>\n        As a part of the Penelope infrastructure, the climate change opinion\n        observatory is a thematic web application with an accessible user\n        interface that can be used ‘as such’, but that also offers users the\n        flexibility to combine and possibly customize various analytical\n        pipeline components. These components, some of which are currently still\n        under development, cover the research cycle from the phase of data\n        gathering up to the actual reporting on analyses. Current tools within\n        the climate change observatory include:\n      </p>\n\n      <ul>\n        <li>\n          An interface for selecting the data source and filtering data by\n          keywords, data range and number of posts or articles\n        </li>\n        <li>\n          An interface for exploratory analyses, including time series data on\n          content grouped by category (e.g. on the basis of tags assigned to\n          news articles or hashtags of tweets)\n        </li>\n        <li>\n          Basic analytical tools including keyword in context search (KWIC),\n          visualizations of co-occurrence networks and of term frequencies.\n        </li>\n      </ul>\n\n      <p>\n        Forthcoming analytical components will include tools for analyzing\n        causal relations in texts as well as for generating reports that might\n        foster reproducibility of analyses. For preliminary examples of how\n        these tools might be used to support research in the social sciences and\n        humanities, please refer to the Showcase. Users interested in\n        contributing their own components or exploring the possibilities of\n        existing components in the Penelope ecosystem can refer to the Penelope\n        community page for the latest news and updates on the project.\n      </p>\n    </Container>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Container } from \"reactstrap\";\n\nfunction About() {\n  return (\n    <Container>\n      <h1>About</h1>\n      <p>\n        This application has been developed by the Evolutionary and Hybrid AI\n        team at VUB for the ODYCCEUS project founded by the H2020 FETPROACT\n        program of the European Commission. It is hosted by the AI lab Brussels.\n      </p>\n    </Container>\n  );\n}\n\nexport default About;\n","export const BASE_URL = \"https://penelope.vub.be/observatory-api/\";\n//export const BASE_URL = \"http://localhost:5000/\";\n\nexport const HEADERS = {\n  Accept: \"application/json\",\n  \"Content-Type\": \"application/json\"\n};\n\nexport default function getURL(source, term, start, stop, number) {\n  const path = {\n    guardian: \"test?\",\n    parlgbr: \"get-parl-data-gbr?\",\n    parlger: \"get-parl-data-ger?\",\n    twitter: \"twitter-data?\",\n    reddit: \"get-reddit-data?\"\n  };\n  let params = new URLSearchParams({\n    term: term,\n    start: start,\n    stop: stop,\n    number: number\n  });\n  return BASE_URL + path[source] + params.toString();\n}\n\nexport function appendDataset(term, start, stop, number, data, prevState) {\n  let datasetName = term + start + stop + number;\n  let dataset = { ...prevState.dataset };\n  let step = prevState.step;\n\n  if (!prevState.step.length) step = [...prevState.step, \"text\"];\n\n  dataset[datasetName] = {\n    term: term,\n    start: start,\n    stop: stop,\n    number: number,\n    data: data\n  };\n  return { dataset, step: step };\n}\n","import React from \"react\";\nimport MyNavbar from \"./navbar.js\";\nimport Pipeline from \"./pipeline.js\";\nimport Dashboard from \"./dashboard.js\";\nimport Home from \"./home.js\";\nimport About from \"./about.js\";\nimport { Container } from \"reactstrap\";\nimport getURL, { BASE_URL, HEADERS } from \"./createURLquery.js\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Warning from \"./warning.js\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      datasets: [],\n      steps: [],\n      pipeline: [],\n      loading: false,\n      errorMessage: \"\"\n    };\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handlePlot = this.handlePlot.bind(this);\n    this.handleGraph = this.handleGraph.bind(this);\n    this.handleCause = this.handleCause.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleFinish = this.handleFinish.bind(this);\n    this.handleWordTree = this.handleWordTree.bind(this);\n    this.handleEntities = this.handleEntities.bind(this);\n    this.handleStatement = this.handleStatement.bind(this);\n    this.handleFunction5 = this.handleFunction5.bind(this);\n    this.handleFunction6 = this.handleFunction6.bind(this);\n  }\n\n  handleAdd(source, term, start, stop, number) {\n    const name = source + term + start + stop + number;\n    if (this.state.datasets.some(e => e.name === name)) return;\n\n    let url = getURL(source, term, start, stop, number);\n    this.setState({ pipeline: [...this.state.pipeline, \"Dataset: \" + url] });\n    fetch(url, {\n      method: \"GET\"\n    })\n      .then(data => data.json())\n      .then(data => {\n        this.setState(previousState => ({\n          datasets: [\n            ...previousState.datasets.map(dataset => {\n              dataset.statements = null;\n              dataset.graph = null;\n              dataset.plot = null;\n              dataset.tree = null;\n              dataset.entities = null;\n              return dataset;\n            }),\n            {\n              name: name,\n              data: data,\n              term: term,\n              start: start,\n              stop: stop,\n              number: number\n            }\n          ],\n          steps: [\"text\"]\n        }));\n      });\n  }\n\n  handleDelete(toDelete) {\n    const datasets = this.state.datasets.filter(set => set.name !== toDelete);\n    const newDatasets = datasets.map(dataset => {\n      dataset.statements = null;\n      dataset.graph = null;\n      dataset.plot = null;\n      dataset.tree = null;\n      dataset.entities = null;\n      return dataset;\n    });\n    if (datasets.length === 0) {\n      this.setState({ steps: [], datasets: newDatasets });\n    } else {\n      this.setState({ steps: [\"text\"], datasets: newDatasets });\n    }\n  }\n\n  handleWordTree() {\n    this.setState({ loading: true });\n    const dataArr = this.state.datasets.map(dataset => dataset.data);\n\n    let url = BASE_URL + \"get-word-tree\";\n\n    this.setState({ pipeline: [...this.state.pipeline, \"Word Tree: \" + url] });\n\n    const fetches = dataArr.map(data =>\n      fetch(BASE_URL + \"get-word-tree\", {\n        method: \"POST\",\n        headers: HEADERS,\n        body: JSON.stringify(data)\n      })\n    );\n    Promise.all(fetches)\n      .then(responses => Promise.all(responses.map(r => r.json())))\n      .then(jsonObjects => {\n        this.setState(prevState => ({\n          datasets: [\n            ...prevState.datasets.map((dataset, i) => {\n              dataset.tree = jsonObjects[i];\n              return dataset;\n            })\n          ]\n        }));\n        this.setState({ steps: [\"text\", \"final\"] });\n\n        //TODO TEST IF DASHBOARD UPDATES PROPERLY\n        this.setState(prevState => {\n          return prevState.datasets.map(dataset => {\n            dataset.statements = null;\n            dataset.graph = null;\n            dataset.plot = null;\n            dataset.entities = null;\n            return dataset;\n          });\n        });\n\n        this.setState({ loading: false });\n      });\n  }\n\n  handleStatement() {\n    this.setState({ loading: true });\n    const dataArr = this.state.datasets.map(dataset => dataset.data);\n\n    let url = BASE_URL + \"get-statements\";\n\n    this.setState({ pipeline: [...this.state.pipeline, \"Statements: \" + url] });\n\n    const fetches = dataArr.map(data =>\n      fetch(BASE_URL + \"get-statements\", {\n        method: \"POST\",\n        headers: HEADERS,\n        body: JSON.stringify(data)\n      })\n    );\n    Promise.all(fetches)\n      .then(responses => Promise.all(responses.map(r => r.json())))\n      .then(jsonObjects => {\n        this.setState(prevState => ({\n          datasets: [\n            ...prevState.datasets.map((dataset, i) => {\n              dataset.statements = jsonObjects[i];\n              return dataset;\n            })\n          ]\n        }));\n        this.setState({ steps: [\"text\", \"graph\"] });\n\n        //TODO TEST IF DASHBOARD UPDATES PROPERLY\n        this.setState(prevState => {\n          return prevState.datasets.map(dataset => {\n            dataset.tree = null;\n            dataset.graph = null;\n            dataset.plot = null;\n            dataset.entities = null;\n            return dataset;\n          });\n        });\n\n        this.setState({ loading: false });\n      });\n  }\n\n  handleGraph() {\n    this.setState({ loading: true });\n\n    let url = BASE_URL + \"visualize-graph\";\n\n    this.setState({\n      pipeline: [...this.state.pipeline, \"Graph Visualisation: \" + url]\n    });\n\n    this.setState(prevState => ({\n      datasets: [\n        ...prevState.datasets.map(dataset => {\n          dataset.graph = dataset.statements;\n          return dataset;\n        })\n      ]\n    }));\n    this.setState({ steps: [\"text\", \"graph\", \"final\"] });\n    this.setState({ loading: false });\n  }\n\n  handleEntities() {\n    this.setState({ loading: true });\n    const dataArr = this.state.datasets.map(dataset => dataset.data);\n\n    let url = BASE_URL + \"get-entities\";\n\n    this.setState({\n      pipeline: [...this.state.pipeline, \"Named Entity Recognition: \" + url]\n    });\n\n    const fetches = dataArr.map(data =>\n      fetch(BASE_URL + \"get-entities\", {\n        method: \"POST\",\n        headers: HEADERS,\n        body: JSON.stringify(data)\n      })\n    );\n    Promise.all(fetches)\n      .then(responses => Promise.all(responses.map(r => r.json())))\n      .then(jsonObjects => {\n        this.setState(prevState => ({\n          datasets: [\n            ...prevState.datasets.map((dataset, i) => {\n              dataset.entities = jsonObjects[i];\n              return dataset;\n            })\n          ]\n        }));\n        this.setState({ steps: [\"text\", \"numerical\"] });\n        //TODO TEST IF DASHBOARD UPDATES PROPERLY\n        this.setState(prevState => {\n          return prevState.datasets.map(dataset => {\n            dataset.statements = null;\n            dataset.graph = null;\n            dataset.plot = null;\n            dataset.tree = null;\n            return dataset;\n          });\n        });\n\n        this.setState({ loading: false });\n      });\n  }\n\n  handlePlot() {\n    this.setState({ loading: true });\n\n    let url = \"Plot graph\";\n\n    this.setState({ pipeline: [...this.state.pipeline, url] });\n\n    this.setState(prevState => ({\n      datasets: [\n        ...prevState.datasets.map(dataset => {\n          dataset.plot = dataset.entities;\n          return dataset;\n        })\n      ]\n    }));\n    this.setState({ steps: [\"text\", \"numerical\", \"final\"] });\n    this.setState({ loading: false });\n  }\n\n  handleFinish() {\n    this.setState({ steps: [...this.state.steps, \"done\"] });\n  }\n\n  handleCause() {\n    this.setState({ loading: true });\n\n    const dataArr = this.state.datasets.map(dataset => dataset.data);\n    const fetches = dataArr.map(data =>\n      fetch(BASE_URL + \"get-cause\", {\n        method: \"POST\",\n        headers: HEADERS,\n        body: JSON.stringify(data)\n      })\n    );\n    Promise.all(fetches)\n      .then(responses => Promise.all(responses.map(r => r.json())))\n      .then(jsonObjects => {\n        this.setState(prevState => ({\n          datasets: [\n            ...prevState.datasets.map((dataset, i) => {\n              dataset.cause = jsonObjects[i];\n              return dataset;\n            })\n          ]\n        }));\n        this.setState({ steps: [\"text\", \"numerical\"] });\n        this.setState(prevState => {\n          return prevState.datasets.map(dataset => {\n            dataset.statements = null;\n            dataset.graph = null;\n            dataset.plot = null;\n            dataset.tree = null;\n            dataset.entities = null;\n            return dataset;\n          });\n        });\n\n        this.setState({ loading: false });\n      })\n      .catch(error => {\n        this.setState({ errorMessage: \"error\" });\n      });\n  }\n\n  handleFunction5() {}\n\n  handleFunction6() {}\n\n  render() {\n    return (\n      <>\n        <Router basename={\"/observatories/climate-change-opinion-observatory\"}>\n          <MyNavbar />\n          <Switch>\n            <Route path=\"/observatory\">\n              <Container fluid={true}>\n                {/* <Warning message={this.state.errorMessage} /> */}\n                <h1>Pipeline</h1>\n                <Pipeline\n                  labels={this.state.datasets.map(x => x.name)}\n                  steps={this.state.steps}\n                  pipeline={this.state.pipeline}\n                  onAdd={this.handleAdd}\n                  onDelete={this.handleDelete}\n                  onStatement={this.handleStatement}\n                  onWordTree={this.handleWordTree}\n                  onCause={this.handleCause}\n                  onEntities={this.handleEntities}\n                  onPlotGraph={this.handleGraph}\n                  onFinish={this.handleFinish}\n                  onPlot={this.handlePlot}\n                  onTextFunction5={this.handleFunction5} //free\n                  onTextFunction6={this.handleFunction6} //free\n                />\n                <h1>Dashboard</h1>\n                <Dashboard\n                  isLoading={this.state.loading}\n                  datasets={this.state.datasets}\n                />\n              </Container>\n            </Route>\n            <Route path=\"/about\">\n              <About />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </Router>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport { Alert } from \"reactstrap\";\n\nclass Warning extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { message: this.props.message };\n  }\n  //   componentDidMount() {\n  //     this.setState({ message: this.props.message });\n  //   }\n\n  componentDidUpdate() {\n    setTimeout(() => this.setState({ message: \"\" }), 3000);\n  }\n\n  render() {\n    return (\n      this.props.message !== \"\" && (\n        <Alert color=\"danger\">{this.props.message}</Alert>\n      )\n    );\n  }\n}\n\nexport default Warning;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./app.js\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}